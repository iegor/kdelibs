# Makefile.in generated by automake 1.11.6 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# kio/tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#    This file is part of the KDE libraries
#    Copyright (C) 1997 David Faure <faure@kde.org>

#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Library General Public
#    License as published by the Free Software Foundation; either
#    version 2 of the License, or (at your option) any later version.

#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Library General Public License for more details.

#    You should have received a copy of the GNU Library General Public License
#    along with this library; see the file COPYING.LIB.  If not, write to
#    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
#    Boston, MA 02110-1301, USA.


am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/kdelibs
pkgincludedir = $(includedir)/kdelibs
pkglibdir = $(libdir)/kdelibs
pkglibexecdir = $(libexecdir)/kdelibs
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
check_PROGRAMS = ksycocatest$(EXEEXT) getalltest$(EXEEXT) \
	kruntest$(EXEEXT) ktartest$(EXEEXT) kziptest$(EXEEXT) \
	kioslavetest$(EXEEXT) kdirwatchtest$(EXEEXT) \
	kshredtest$(EXEEXT) speed$(EXEEXT) kurifiltertest$(EXEEXT) \
	kdefaultprogresstest$(EXEEXT) kmimemagictest$(EXEEXT) \
	kfiltertest$(EXEEXT) kiopassdlgtest$(EXEEXT) \
	kscantest$(EXEEXT) kdirlistertest$(EXEEXT) \
	previewtest$(EXEEXT) kionetrctest$(EXEEXT) kdcopcheck$(EXEEXT) \
	metatest$(EXEEXT) kmimefromext$(EXEEXT) kpropsdlgtest$(EXEEXT) \
	kmfitest$(EXEEXT) dataprotocoltest$(EXEEXT) \
	kprotocolinfotest$(EXEEXT) ksycocaupdatetest$(EXEEXT) \
	netaccesstest$(EXEEXT) jobtest$(EXEEXT) \
	kurlcompletiontest$(EXEEXT) kmimetypetest$(EXEEXT) \
	kacltest$(EXEEXT)
TESTS = kmimetypetest$(EXEEXT)
bin_PROGRAMS = ktradertest$(EXEEXT)
subdir = kio/tests
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/dcop/dcop-path.h \
	$(top_builddir)/kdecore/kdemacros.h \
	$(top_builddir)/kio/kssl/ksslconfig.h \
	$(top_builddir)/kjs/global.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__DEPENDENCIES_1 =
kunittest_kdirwatch_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_kunittest_kdirwatch_la_OBJECTS = kdirwatchunittest.lo
#>- kunittest_kdirwatch_la_OBJECTS = $(am_kunittest_kdirwatch_la_OBJECTS)
#>+ 1
kunittest_kdirwatch_la_OBJECTS = kdirwatchunittest.lo
#>- kunittest_kdirwatch_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(kunittest_kdirwatch_la_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
kunittest_kdirwatch_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(kunittest_kdirwatch_la_LDFLAGS) $(LDFLAGS) -o $@
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_dataprotocoltest_OBJECTS = dataprotocoltest.$(OBJEXT)
#>- dataprotocoltest_OBJECTS = $(am_dataprotocoltest_OBJECTS)
#>+ 1
dataprotocoltest_OBJECTS = dataprotocoltest.$(OBJEXT)
dataprotocoltest_LDADD = $(LDADD)
dataprotocoltest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_getalltest_OBJECTS = getalltest.$(OBJEXT)
#>- getalltest_OBJECTS = $(am_getalltest_OBJECTS)
#>+ 1
getalltest_OBJECTS = getalltest.$(OBJEXT)
getalltest_LDADD = $(LDADD)
getalltest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_jobtest_OBJECTS = jobtest.$(OBJEXT)
#>- jobtest_OBJECTS = $(am_jobtest_OBJECTS)
#>+ 1
jobtest_OBJECTS = jobtest.$(OBJEXT)
jobtest_LDADD = $(LDADD)
jobtest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kacltest_OBJECTS = kacltest.$(OBJEXT)
#>- kacltest_OBJECTS = $(am_kacltest_OBJECTS)
#>+ 1
kacltest_OBJECTS = kacltest.$(OBJEXT)
kacltest_LDADD = $(LDADD)
kacltest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kdcopcheck_OBJECTS = kdcopcheck.$(OBJEXT)
#>- kdcopcheck_OBJECTS = $(am_kdcopcheck_OBJECTS)
#>+ 1
kdcopcheck_OBJECTS = kdcopcheck.$(OBJEXT)
kdcopcheck_LDADD = $(LDADD)
kdcopcheck_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kdefaultprogresstest_OBJECTS = kdefaultprogresstest.$(OBJEXT)
#>- kdefaultprogresstest_OBJECTS = $(am_kdefaultprogresstest_OBJECTS)
#>+ 1
kdefaultprogresstest_OBJECTS = kdefaultprogresstest.$(OBJEXT)
kdefaultprogresstest_LDADD = $(LDADD)
kdefaultprogresstest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kdirlistertest_OBJECTS = kdirlistertest.$(OBJEXT)
#>- kdirlistertest_OBJECTS = $(am_kdirlistertest_OBJECTS)
#>+ 1
kdirlistertest_OBJECTS = kdirlistertest.$(OBJEXT)
kdirlistertest_LDADD = $(LDADD)
kdirlistertest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kdirwatchtest_OBJECTS = kdirwatchtest.$(OBJEXT)
#>- kdirwatchtest_OBJECTS = $(am_kdirwatchtest_OBJECTS)
#>+ 1
kdirwatchtest_OBJECTS = kdirwatchtest.$(OBJEXT)
kdirwatchtest_LDADD = $(LDADD)
kdirwatchtest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kfiltertest_OBJECTS = kfiltertest.$(OBJEXT)
#>- kfiltertest_OBJECTS = $(am_kfiltertest_OBJECTS)
#>+ 1
kfiltertest_OBJECTS = kfiltertest.$(OBJEXT)
kfiltertest_LDADD = $(LDADD)
kfiltertest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kionetrctest_OBJECTS = kionetrctest.$(OBJEXT)
#>- kionetrctest_OBJECTS = $(am_kionetrctest_OBJECTS)
#>+ 1
kionetrctest_OBJECTS = kionetrctest.$(OBJEXT)
kionetrctest_LDADD = $(LDADD)
kionetrctest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kiopassdlgtest_OBJECTS = kiopassdlgtest.$(OBJEXT)
#>- kiopassdlgtest_OBJECTS = $(am_kiopassdlgtest_OBJECTS)
#>+ 1
kiopassdlgtest_OBJECTS = kiopassdlgtest.$(OBJEXT)
kiopassdlgtest_LDADD = $(LDADD)
kiopassdlgtest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kioslavetest_OBJECTS = kioslavetest.$(OBJEXT)
#>- kioslavetest_OBJECTS = $(am_kioslavetest_OBJECTS)
#>+ 1
kioslavetest_OBJECTS = kioslavetest.$(OBJEXT)
kioslavetest_LDADD = $(LDADD)
kioslavetest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kmfitest_OBJECTS = kmfitest.$(OBJEXT)
#>- kmfitest_OBJECTS = $(am_kmfitest_OBJECTS)
#>+ 1
kmfitest_OBJECTS = kmfitest.$(OBJEXT)
kmfitest_LDADD = $(LDADD)
kmfitest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kmimefromext_OBJECTS = kmimefromext.$(OBJEXT)
#>- kmimefromext_OBJECTS = $(am_kmimefromext_OBJECTS)
#>+ 1
kmimefromext_OBJECTS = kmimefromext.$(OBJEXT)
kmimefromext_LDADD = $(LDADD)
kmimefromext_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kmimemagictest_OBJECTS = kmimemagictest.$(OBJEXT)
#>- kmimemagictest_OBJECTS = $(am_kmimemagictest_OBJECTS)
#>+ 1
kmimemagictest_OBJECTS = kmimemagictest.$(OBJEXT)
kmimemagictest_LDADD = $(LDADD)
kmimemagictest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kmimetypetest_OBJECTS = kmimetypetest.$(OBJEXT)
#>- kmimetypetest_OBJECTS = $(am_kmimetypetest_OBJECTS)
#>+ 1
kmimetypetest_OBJECTS = kmimetypetest.$(OBJEXT)
kmimetypetest_LDADD = $(LDADD)
kmimetypetest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kpropsdlgtest_OBJECTS = kpropsdlgtest.$(OBJEXT)
#>- kpropsdlgtest_OBJECTS = $(am_kpropsdlgtest_OBJECTS)
#>+ 1
kpropsdlgtest_OBJECTS = kpropsdlgtest.$(OBJEXT)
kpropsdlgtest_LDADD = $(LDADD)
kpropsdlgtest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kprotocolinfotest_OBJECTS = kprotocolinfotest.$(OBJEXT)
#>- kprotocolinfotest_OBJECTS = $(am_kprotocolinfotest_OBJECTS)
#>+ 1
kprotocolinfotest_OBJECTS = kprotocolinfotest.$(OBJEXT)
kprotocolinfotest_LDADD = $(LDADD)
kprotocolinfotest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kruntest_OBJECTS = kruntest.$(OBJEXT)
#>- kruntest_OBJECTS = $(am_kruntest_OBJECTS)
#>+ 1
kruntest_OBJECTS = kruntest.$(OBJEXT)
kruntest_LDADD = $(LDADD)
kruntest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kscantest_OBJECTS = kscantest.$(OBJEXT)
#>- kscantest_OBJECTS = $(am_kscantest_OBJECTS)
#>+ 1
kscantest_OBJECTS = kscantest.$(OBJEXT)
kscantest_LDADD = $(LDADD)
kscantest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kshredtest_OBJECTS = kshredtest.$(OBJEXT)
#>- kshredtest_OBJECTS = $(am_kshredtest_OBJECTS)
#>+ 1
kshredtest_OBJECTS = kshredtest.$(OBJEXT)
kshredtest_LDADD = $(LDADD)
kshredtest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_ksycocatest_OBJECTS = ksycocatest.$(OBJEXT)
#>- ksycocatest_OBJECTS = $(am_ksycocatest_OBJECTS)
#>+ 1
ksycocatest_OBJECTS = ksycocatest.$(OBJEXT)
ksycocatest_LDADD = $(LDADD)
ksycocatest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_ksycocaupdatetest_OBJECTS = ksycocaupdatetest.$(OBJEXT)
#>- ksycocaupdatetest_OBJECTS = $(am_ksycocaupdatetest_OBJECTS)
#>+ 1
ksycocaupdatetest_OBJECTS = ksycocaupdatetest.$(OBJEXT)
ksycocaupdatetest_LDADD = $(LDADD)
ksycocaupdatetest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_ktartest_OBJECTS = ktartest.$(OBJEXT)
#>- ktartest_OBJECTS = $(am_ktartest_OBJECTS)
#>+ 1
ktartest_OBJECTS = ktartest.$(OBJEXT)
ktartest_LDADD = $(LDADD)
ktartest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_ktradertest_OBJECTS = ktradertest.$(OBJEXT)
#>- ktradertest_OBJECTS = $(am_ktradertest_OBJECTS)
#>+ 1
ktradertest_OBJECTS = ktradertest.$(OBJEXT)
ktradertest_LDADD = $(LDADD)
ktradertest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kurifiltertest_OBJECTS = kurifiltertest.$(OBJEXT)
#>- kurifiltertest_OBJECTS = $(am_kurifiltertest_OBJECTS)
#>+ 1
kurifiltertest_OBJECTS = kurifiltertest.$(OBJEXT)
kurifiltertest_LDADD = $(LDADD)
kurifiltertest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kurlcompletiontest_OBJECTS = kurlcompletiontest.$(OBJEXT)
#>- kurlcompletiontest_OBJECTS = $(am_kurlcompletiontest_OBJECTS)
#>+ 1
kurlcompletiontest_OBJECTS = kurlcompletiontest.$(OBJEXT)
kurlcompletiontest_LDADD = $(LDADD)
kurlcompletiontest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kziptest_OBJECTS = kziptest.$(OBJEXT)
#>- kziptest_OBJECTS = $(am_kziptest_OBJECTS)
#>+ 1
kziptest_OBJECTS = kziptest.$(OBJEXT)
kziptest_LDADD = $(LDADD)
kziptest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_metatest_OBJECTS = metatest.$(OBJEXT)
#>- metatest_OBJECTS = $(am_metatest_OBJECTS)
#>+ 1
metatest_OBJECTS = metatest.$(OBJEXT)
metatest_LDADD = $(LDADD)
metatest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_netaccesstest_OBJECTS = netaccesstest.$(OBJEXT)
#>- netaccesstest_OBJECTS = $(am_netaccesstest_OBJECTS)
#>+ 1
netaccesstest_OBJECTS = netaccesstest.$(OBJEXT)
netaccesstest_LDADD = $(LDADD)
netaccesstest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_previewtest_OBJECTS = previewtest.$(OBJEXT)
#>- previewtest_OBJECTS = $(am_previewtest_OBJECTS)
#>+ 1
previewtest_OBJECTS = previewtest.$(OBJEXT)
previewtest_LDADD = $(LDADD)
previewtest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_speed_OBJECTS = speed.$(OBJEXT)
#>- speed_OBJECTS = $(am_speed_OBJECTS)
#>+ 1
speed_OBJECTS = speed.$(OBJEXT)
speed_LDADD = $(LDADD)
speed_DEPENDENCIES = $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(top_builddir) -I$(top_builddir)/dcop -I$(top_builddir)/kdecore -I$(top_builddir)/kio/kssl -I$(top_builddir)/kjs
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(kunittest_kdirwatch_la_SOURCES) \
	$(dataprotocoltest_SOURCES) $(getalltest_SOURCES) \
	$(jobtest_SOURCES) $(kacltest_SOURCES) $(kdcopcheck_SOURCES) \
	$(kdefaultprogresstest_SOURCES) $(kdirlistertest_SOURCES) \
	$(kdirwatchtest_SOURCES) $(kfiltertest_SOURCES) \
	$(kionetrctest_SOURCES) $(kiopassdlgtest_SOURCES) \
	$(kioslavetest_SOURCES) $(kmfitest_SOURCES) \
	$(kmimefromext_SOURCES) $(kmimemagictest_SOURCES) \
	$(kmimetypetest_SOURCES) $(kpropsdlgtest_SOURCES) \
	$(kprotocolinfotest_SOURCES) $(kruntest_SOURCES) \
	$(kscantest_SOURCES) $(kshredtest_SOURCES) \
	$(ksycocatest_SOURCES) $(ksycocaupdatetest_SOURCES) \
	$(ktartest_SOURCES) $(ktradertest_SOURCES) \
	$(kurifiltertest_SOURCES) $(kurlcompletiontest_SOURCES) \
	$(kziptest_SOURCES) $(metatest_SOURCES) \
	$(netaccesstest_SOURCES) $(previewtest_SOURCES) \
	$(speed_SOURCES)
DIST_SOURCES = $(kunittest_kdirwatch_la_SOURCES) \
	$(dataprotocoltest_SOURCES) $(getalltest_SOURCES) \
	$(jobtest_SOURCES) $(kacltest_SOURCES) $(kdcopcheck_SOURCES) \
	$(kdefaultprogresstest_SOURCES) $(kdirlistertest_SOURCES) \
	$(kdirwatchtest_SOURCES) $(kfiltertest_SOURCES) \
	$(kionetrctest_SOURCES) $(kiopassdlgtest_SOURCES) \
	$(kioslavetest_SOURCES) $(kmfitest_SOURCES) \
	$(kmimefromext_SOURCES) $(kmimemagictest_SOURCES) \
	$(kmimetypetest_SOURCES) $(kpropsdlgtest_SOURCES) \
	$(kprotocolinfotest_SOURCES) $(kruntest_SOURCES) \
	$(kscantest_SOURCES) $(kshredtest_SOURCES) \
	$(ksycocatest_SOURCES) $(ksycocaupdatetest_SOURCES) \
	$(ktartest_SOURCES) $(ktradertest_SOURCES) \
	$(kurifiltertest_SOURCES) $(kurlcompletiontest_SOURCES) \
	$(kziptest_SOURCES) $(metatest_SOURCES) \
	$(netaccesstest_SOURCES) $(previewtest_SOURCES) \
	$(speed_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = ${SHELL} /home/rainman/projects/kdelibs/admin/missing --run aclocal-1.11
ACL_LIBS = -lacl -lattr
ALLOCA = 
AMTAR = $${TAR-tar}
AR = i686-pc-linux-gnu-ar
ARTSCCONFIG = 
AUTOCONF = $(SHELL) $(top_srcdir)/admin/cvs.sh configure || touch configure
AUTODIRS = 
AUTOHEADER = ${SHELL} /home/rainman/projects/kdelibs/admin/missing --run autoheader
AUTOMAKE = ${SHELL} /home/rainman/projects/kdelibs/admin/missing --run automake-1.11
AVAHI_CFLAGS = -D_REENTRANT -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -D_REENTRANT -I/usr/qt/3/include 
AVAHI_LIBS = -lavahi-qt3 -lavahi-common -lavahi-client 
AWK = gawk
CC = i686-pc-linux-gnu-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -std=iso9899:1990 -W -Wall -Wchar-subscripts -Wshadow -Wpointer-arith -Wmissing-prototypes -Wwrite-strings -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -g3 -fno-inline  -O0 -ggdb3 -Wall -Wformat-security -Wmissing-format-attribute
CONF_FILES =  $(top_srcdir)/configure.in.in $(top_srcdir)/./arts/configure.in.in $(top_srcdir)/./dcop/configure.in.in $(top_srcdir)/./dnssd/configure.in.bot $(top_srcdir)/./dnssd/configure.in.in $(top_srcdir)/./kate/part/configure.in.in $(top_srcdir)/./kdecore/configure.in.in $(top_srcdir)/./kdecore/malloc/configure.in.in $(top_srcdir)/./kdefx/configure.in.in $(top_srcdir)/./kdeprint/configure.in.in $(top_srcdir)/./kdeprint/cups/configure.in.in $(top_srcdir)/./kdesu/configure.in.in $(top_srcdir)/./kdoctools/configure.in.in $(top_srcdir)/./khtml/configure.in.in $(top_srcdir)/./khtml/java/configure.in.in $(top_srcdir)/./kimgio/configure.in.in $(top_srcdir)/./kinit/configure.in.in $(top_srcdir)/./kio/kio/configure.in.in $(top_srcdir)/./kio/kssl/configure.in.in $(top_srcdir)/./kio/misc/kpac/configure.in.in $(top_srcdir)/./kioslave/bzip2/configure.in.in $(top_srcdir)/./kioslave/ftp/configure.in.in $(top_srcdir)/./kioslave/http/configure.in.bot $(top_srcdir)/./kioslave/http/configure.in.in $(top_srcdir)/./kjs/configure.in.in $(top_srcdir)/./kspell2/plugins/configure.in.bot $(top_srcdir)/./kspell2/plugins/configure.in.in $(top_srcdir)/./libkmid/configure.in.in $(top_srcdir)/./libkscreensaver/configure.in.in $(top_srcdir)/configure.in.mid $(top_srcdir)/configure.in.bot
CPP = i686-pc-linux-gnu-gcc -E
CPPFLAGS =  -DQT_THREAD_SUPPORT  -D_REENTRANT
CXX = i686-pc-linux-gnu-g++
CXXCPP = i686-pc-linux-gnu-g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wno-long-long -Wundef -ansi -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -Wcast-align -Wchar-subscripts -Wall -W -Wpointer-arith -fno-builtin -g3 -fno-inline -O0 -ggdb3 -Wall -Wformat-security -Wmissing-format-attribute -Wno-non-virtual-dtor -fno-exceptions -fno-check-new -fno-common  -DQT_CLEAN_NAMESPACE -DQT_NO_ASCII_CAST -DQT_NO_STL -DQT_NO_COMPAT -DQT_NO_TRANSLATION
CYGPATH_W = echo
DCOPIDL = $(top_builddir)/dcop/dcopidl/dcopidl
DCOPIDL2CPP = $(top_builddir)/dcop/dcopidl2cpp/dcopidl2cpp
DCOPIDLNG = $(top_srcdir)/dcop/dcopidlng/dcopidlng
DCOP_DEPENDENCIES = $(DCOPIDL) $(DCOPIDLNG)
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN = 
DOXYGEN_PROJECT_NAME = The KDE API Reference
DOXYGEN_PROJECT_NUMBER = Version 3.5.10
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_PERMISSIVE_FLAG = -fpermissive
EXEEXT = 
EXR_FLAGS = 
EXTRA_SUBDIRS = 
FGREP = /bin/grep -F
FRAMEWORK_COREAUDIO = 
GMSGFMT = /usr/bin/gmsgfmt
GREP = /bin/grep
GSSAPI_INCS = 
GSSAPI_LIBS = 
GSSAPI_RPATH = 
HAVE_GCC_VISIBILITY = 0
HAVE_MITSHM = 
HAVE_SENDFILE = 
HELP_SUBDIR = kdoctools
ICE_RLIB = ICE/libkICE.la
ICE_SUBDIR = ICE
INCLTDL = -I${top_srcdir}/libltdl
INSTALL = /usr/bin/install -c -p
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL} $(INSTALL_STRIP_FLAG)
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KCFG_DEPENDENCIES = $(KCONFIG_COMPILER)
KCONFIG_COMPILER = $(top_builddir)/kdecore/kconfig_compiler/kconfig_compiler
KDEINIT_SETUID = 1
KDEINIT_XFT_INCLUDES = -I/usr/include/freetype2 
KDE_CHECK_PLUGIN = $(KDE_PLUGIN) -rpath $(libdir)
KDE_EXTRA_RPATH = 
KDE_FORCE_INLINE = -finline-limit=100000
KDE_HAS_DOXYGEN = no
KDE_HAVE_DOT = YES
KDE_INCLUDES = -I${prefix}/include
KDE_LDFLAGS = -L/usr/kde/git/lib
KDE_MT_LDFLAGS = 
KDE_MT_LIBS = -lpthread
KDE_NO_UNDEFINED = -Wl,--no-undefined -Wl,--allow-shlib-undefined
KDE_PLUGIN = -avoid-version -module -no-undefined $(KDE_NO_UNDEFINED) $(KDE_RPATH) $(KDE_MT_LDFLAGS)
KDE_RPATH = -R $(libdir) -R $(kde_libraries) -R $(qt_libraries) -R $(x_libraries)
KDE_USE_CLOSURE_FALSE = 
KDE_USE_CLOSURE_TRUE = #
KDE_USE_FINAL_FALSE = 
KDE_USE_FINAL_TRUE = #
KDE_USE_FPIE = -fPIE
KDE_USE_NMCHECK_FALSE = 
KDE_USE_NMCHECK_TRUE = #
KDE_USE_PIE = -pie
KDE_XSL_STYLESHEET = $(top_srcdir)/kdoctools/customization/kde-chunk.xsl
KJAVA_POLICYPATH = /usr/kde/git/share/apps/kjava/-
LD = /usr/i686-pc-linux-gnu/bin/ld
LDFLAGS = 
LDFLAGS_AS_NEEDED = 
LDFLAGS_NEW_DTAGS = 
LIBADD_DL = -ldl
LIBART_CFLAGS = -I/usr/include/libart-2.0
LIBART_LIBS = -L/usr/lib -lart_lgpl_2 -lm
LIBART_RPATH = 
LIBASOUND = -lasound
LIBBZ2 = -lbz2
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBDL = -ldl
LIBFAM = -lfam
LIBICE = 
LIBJPEG = -ljpeg
LIBLTDL = ${top_build_prefix}libltdl/libltdlc.la
LIBOBJS = 
LIBPCRE = -lpcreposix -lpcre
LIBPNG = -lpng -lz -lm
LIBPTHREAD = -lpthread
LIBRESOLV = -lresolv
LIBS = 
LIBSM = -lSM -lICE
LIBSOCKET = 
LIBSSL = -lssl -lcrypto
LIBTHAI = 
LIBTIFF = -ltiff -ljpeg -lz
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUCB = 
LIBUTEMPTER = 
LIBUTIL = -lutil
LIBVOLMGT = 
LIBXML_CFLAGS = -I/usr/include/libxml2
LIBXML_LIBS = -lxml2 -lz -lm -ldl
LIBXML_RPATH = 
LIBXSLT_CFLAGS = -I/usr/include/libxml2
LIBXSLT_LIBS = -L/usr/lib -lxslt -lxml2 -lz -ldl -lm -lrt
LIBXSLT_RPATH = 
LIBZ = -lz
LIB_CUPS = -lcups
LIB_EXR = 
LIB_IDN = -lidn
LIB_JASPER = -ljasper -ljpeg -lm
LIB_KAB = $(top_builddir)/kab/libkab.la
LIB_KABC = $(top_builddir)/kabc/libkabc.la
LIB_KDECORE = $(top_builddir)/kdecore/libkdecore.la
LIB_KDED = 
LIB_KDEPIM = -lkdepim
LIB_KDEPRINT = $(top_builddir)/kdeprint/libkdeprint.la
LIB_KDEUI = $(top_builddir)/kdeui/libkdeui.la
LIB_KDNSSD = -lkdnssd
LIB_KFILE = $(top_builddir)/kio/libkio.la
LIB_KFM = 
LIB_KHTML = $(top_builddir)/khtml/libkhtml.la
LIB_KIMGIO = $(top_builddir)/kimgio/libkimgio.la
LIB_KIMPROXY = -lkimproxy
LIB_KIO = $(top_builddir)/kio/libkio.la
LIB_KJS = -lkjs
LIB_KNEWSTUFF = $(top_builddir)/knewstuff/libknewstuff.la
LIB_KPARTS = $(top_builddir)/kparts/libkparts.la
LIB_KSPELL = -lkspell
LIB_KSYCOCA = $(top_builddir)/kio/libkio.la
LIB_KUNITTEST = $(top_builddir)/kunittest/libkunittest.la
LIB_KUTILS = -lkutils
LIB_POLL = 
LIB_QPE = 
LIB_QT = -lqt-mt  $(LIBZ) $(LIBPNG) -lXext $(LIB_X11) $(LIBSM) -lpthread
LIB_SMB = -lsmb
LIB_X11 = -lX11 $(LIBSOCKET)
LIB_XEXT = -lXext
LIB_XRENDER = -lXrender
LIPO = 
LN_S = ln -s
LTDLDEPS = ${top_build_prefix}libltdl/libltdlc.la
LTDLINCL = -I${top_srcdir}/libltdl
LTLIBOBJS = 
LUA = 
LUA_INCLUDES = 
LUA_LIBS = 
MAKEINFO = ${SHELL} /home/rainman/projects/kdelibs/admin/missing --run makeinfo
MAKEKDEWIDGETS = $(top_builddir)/kdewidgets/makekdewidgets
MCOPIDL = 
MD5SUM = /usr/bin/md5sum
MEINPROC = $(top_builddir)/kdoctools/meinproc --srcdir=$(top_srcdir)/kdoctools
MEINPROC_DEP = $(top_builddir)/kdoctools/meinproc
MKDIR_P = /bin/mkdir -p
MOC = /usr/qt/3/bin/moc
MSGFMT = /usr/bin/gmsgfmt
NM = /usr/bin/nm -B
NMEDIT = 
NOOPT_CFLAGS = -O0
NOOPT_CXXFLAGS = -O0
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = kdelibs
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PCRECFLAGS = 
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
QNAMESPACE_H = /usr/qt/3/include/qnamespace.h
QTDOCDIR = NO
QTE_NORTTI = 
QT_INCLUDES = -I/usr/qt/3/include
QT_LDFLAGS = -L/usr/qt/3/lib
RANLIB = i686-pc-linux-gnu-ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SSL_INCLUDES = 
SSL_LDFLAGS = 
STRIP = i686-pc-linux-gnu-strip
TOPSUBDIRS =  dcop libltdl kdefx kdecore kunittest kdeui kdesu kjs kwallet kio kded arts dnssd kab kconf_update kdoctools kimgio kioslave knewstuff kparts kresources kstyles kutils libkmid libkscreensaver licenses mimetypes pics doc kcert kinit kdeprint kabc kspell2 kmdi kcmshell khtml interfaces kdewidgets kate
UIC = /usr/qt/3/bin/uic -nounload
UIC_TR = tr2i18n
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_RTTI = 
USE_THREADS = 
VERSION = 3.5.10
WOVERLOADED_VIRTUAL = -Woverloaded-virtual
XGETTEXT = /usr/bin/xgettext
XMKMF = 
XMLLINT = /usr/bin/xmllint
X_EXTRA_LIBS = 
X_INCLUDES = -I.
X_LDFLAGS = -L/usr/lib32
X_PRE_LIBS = 
X_RPATH = -R $(x_libraries)
abs_builddir = /home/rainman/projects/kdelibs/kio/tests
abs_srcdir = /home/rainman/projects/kdelibs/kio/tests
abs_top_builddir = /home/rainman/projects/kdelibs
abs_top_srcdir = /home/rainman/projects/kdelibs
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
all_includes = -I$(top_srcdir)/dcop -I$(top_srcdir)/libltdl -I$(top_srcdir)/kdefx -I$(top_builddir)/kdecore -I$(top_srcdir)/kdecore -I$(top_srcdir)/kdecore/network -I$(top_srcdir)/kdeui -I$(top_srcdir)/kio -I$(top_srcdir)/kio/kio -I$(top_srcdir)/kio/kfile -I$(top_srcdir) $(QT_INCLUDES) $(X_INCLUDES) $(KDE_INCLUDES) $(USER_INCLUDES)
all_libraries = -L/usr/kde/git/lib -L/usr/qt/3/lib -L/usr/lib32   
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = i686-pc-linux-gnu
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
cups_modeldir = /usr/share/cups/model
datadir = /usr/kde/git/share
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
have_pkg_config = yes
host = i686-pc-linux-gnu
host_alias = i686-pc-linux-gnu
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = /usr/kde/git/share/info
install_sh = ${SHELL} /home/rainman/projects/kdelibs/admin/install-sh
kde_appsdir = ${datadir}/applnk
kde_bindir = ${exec_prefix}/bin
kde_confdir = ${datadir}/config
kde_cups_config = /usr/bin/cups-config
kde_datadir = ${datadir}/apps
kde_htmldir = ${datadir}/doc/HTML
kde_icondir = ${datadir}/icons
kde_includes = ${prefix}/include
kde_kcfgdir = ${datadir}/config.kcfg
kde_libraries = /usr/kde/git/lib
kde_libs_htmldir = $(kde_htmldir)
kde_libs_prefix = $(prefix)
kde_locale = ${datadir}/locale
kde_mimedir = ${datadir}/mimelnk
kde_moduledir = ${libdir}/kde3
kde_qtver = 3
kde_servicesdir = ${datadir}/services
kde_servicetypesdir = ${datadir}/servicetypes
kde_sounddir = ${datadir}/sounds
kde_styledir = ${libdir}/kde3/plugins/styles
kde_templatesdir = ${datadir}/templates
kde_wallpaperdir = ${datadir}/wallpapers
kde_widgetdir = ${libdir}/kde3/plugins/designer
kdeinitdir = $(kde_moduledir)
libdir = /usr/kde/git/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = /var/lib
lt_ECHO = echo
mandir = /usr/kde/git/share/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
path_su = /bin/su
path_sudo = /usr/bin/sudo
pdfdir = ${docdir}
prefix = /usr/kde/git
program_transform_name = s,x,x,
psdir = ${docdir}
qt_includes = /usr/qt/3/include
qt_libraries = /usr/qt/3/lib
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /usr/kde/git/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
x_includes = .
x_libraries = /usr/lib32
xdg_appsdir = ${datadir}/applications/kde
xdg_directorydir = ${datadir}/desktop-directories
xdg_menudir = ${sysconfdir}/xdg/menus
INCLUDES = -I$(top_srcdir) -I$(top_srcdir)/kio $(all_includes)
LDADD = $(LIB_KIO)
AM_LDFLAGS = $(all_libraries) $(KDE_RPATH)
#>- METASOURCES = AUTO
speed_SOURCES = speed.cpp
kioslavetest_SOURCES = kioslavetest.cpp
kshredtest_SOURCES = kshredtest.cpp
kdefaultprogresstest_SOURCES = kdefaultprogresstest.cpp
kionetrctest_SOURCES = kionetrctest.cpp
kiopassdlgtest_SOURCES = kiopassdlgtest.cpp
kurifiltertest_SOURCES = kurifiltertest.cpp
ksycocatest_SOURCES = ksycocatest.cpp
kdcopcheck_SOURCES = kdcopcheck.cpp
getalltest_SOURCES = getalltest.cpp
kruntest_SOURCES = kruntest.cpp
kdirwatchtest_SOURCES = kdirwatchtest.cpp
ktradertest_SOURCES = ktradertest.cpp
kmimemagictest_SOURCES = kmimemagictest.cpp
kfiltertest_SOURCES = kfiltertest.cpp
kscantest_SOURCES = kscantest.cpp
kdirlistertest_SOURCES = kdirlistertest.cpp
previewtest_SOURCES = previewtest.cpp
ktartest_SOURCES = ktartest.cpp
kziptest_SOURCES = kziptest.cpp
metatest_SOURCES = metatest.cpp
kmimefromext_SOURCES = kmimefromext.cpp
kpropsdlgtest_SOURCES = kpropsdlgtest.cpp
kmfitest_SOURCES = kmfitest.cpp
dataprotocoltest_SOURCES = dataprotocoltest.cpp
kprotocolinfotest_SOURCES = kprotocolinfotest.cpp
ksycocaupdatetest_SOURCES = ksycocaupdatetest.cpp
netaccesstest_SOURCES = netaccesstest.cpp
jobtest_SOURCES = jobtest.cpp
kurlcompletiontest_SOURCES = kurlcompletiontest.cpp
kmimetypetest_SOURCES = kmimetypetest.cpp
kacltest_SOURCES = kacltest.cpp
check_LTLIBRARIES = kunittest_kdirwatch.la
kunittest_kdirwatch_la_SOURCES = kdirwatchunittest.cpp
kunittest_kdirwatch_la_LIBADD = $(LIB_KUNITTEST) $(LIB_KIO)
kunittest_kdirwatch_la_LDFLAGS = -module $(KDE_CHECK_PLUGIN)
#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
#>- 	        && { if test -f $@; then exit 0; else break; fi; }; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu kio/tests/Makefile'; \
#>- 	$(am__cd) $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu kio/tests/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu kio/tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu kio/tests/Makefile
	cd $(top_srcdir) && perl admin/am_edit kio/tests/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkLTLIBRARIES:
	-test -z "$(check_LTLIBRARIES)" || rm -f $(check_LTLIBRARIES)
	@list='$(check_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
kunittest_kdirwatch.la: $(kunittest_kdirwatch_la_OBJECTS) $(kunittest_kdirwatch_la_DEPENDENCIES) $(EXTRA_kunittest_kdirwatch_la_DEPENDENCIES) 
	$(kunittest_kdirwatch_la_LINK)  $(kunittest_kdirwatch_la_OBJECTS) $(kunittest_kdirwatch_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
dataprotocoltest$(EXEEXT): $(dataprotocoltest_OBJECTS) $(dataprotocoltest_DEPENDENCIES) $(EXTRA_dataprotocoltest_DEPENDENCIES) 
	@rm -f dataprotocoltest$(EXEEXT)
	$(CXXLINK) $(dataprotocoltest_OBJECTS) $(dataprotocoltest_LDADD) $(LIBS)
getalltest$(EXEEXT): $(getalltest_OBJECTS) $(getalltest_DEPENDENCIES) $(EXTRA_getalltest_DEPENDENCIES) 
	@rm -f getalltest$(EXEEXT)
	$(CXXLINK) $(getalltest_OBJECTS) $(getalltest_LDADD) $(LIBS)
jobtest$(EXEEXT): $(jobtest_OBJECTS) $(jobtest_DEPENDENCIES) $(EXTRA_jobtest_DEPENDENCIES) 
	@rm -f jobtest$(EXEEXT)
	$(CXXLINK) $(jobtest_OBJECTS) $(jobtest_LDADD) $(LIBS)
kacltest$(EXEEXT): $(kacltest_OBJECTS) $(kacltest_DEPENDENCIES) $(EXTRA_kacltest_DEPENDENCIES) 
	@rm -f kacltest$(EXEEXT)
	$(CXXLINK) $(kacltest_OBJECTS) $(kacltest_LDADD) $(LIBS)
kdcopcheck$(EXEEXT): $(kdcopcheck_OBJECTS) $(kdcopcheck_DEPENDENCIES) $(EXTRA_kdcopcheck_DEPENDENCIES) 
	@rm -f kdcopcheck$(EXEEXT)
	$(CXXLINK) $(kdcopcheck_OBJECTS) $(kdcopcheck_LDADD) $(LIBS)
kdefaultprogresstest$(EXEEXT): $(kdefaultprogresstest_OBJECTS) $(kdefaultprogresstest_DEPENDENCIES) $(EXTRA_kdefaultprogresstest_DEPENDENCIES) 
	@rm -f kdefaultprogresstest$(EXEEXT)
	$(CXXLINK) $(kdefaultprogresstest_OBJECTS) $(kdefaultprogresstest_LDADD) $(LIBS)
kdirlistertest$(EXEEXT): $(kdirlistertest_OBJECTS) $(kdirlistertest_DEPENDENCIES) $(EXTRA_kdirlistertest_DEPENDENCIES) 
	@rm -f kdirlistertest$(EXEEXT)
	$(CXXLINK) $(kdirlistertest_OBJECTS) $(kdirlistertest_LDADD) $(LIBS)
kdirwatchtest$(EXEEXT): $(kdirwatchtest_OBJECTS) $(kdirwatchtest_DEPENDENCIES) $(EXTRA_kdirwatchtest_DEPENDENCIES) 
	@rm -f kdirwatchtest$(EXEEXT)
	$(CXXLINK) $(kdirwatchtest_OBJECTS) $(kdirwatchtest_LDADD) $(LIBS)
kfiltertest$(EXEEXT): $(kfiltertest_OBJECTS) $(kfiltertest_DEPENDENCIES) $(EXTRA_kfiltertest_DEPENDENCIES) 
	@rm -f kfiltertest$(EXEEXT)
	$(CXXLINK) $(kfiltertest_OBJECTS) $(kfiltertest_LDADD) $(LIBS)
kionetrctest$(EXEEXT): $(kionetrctest_OBJECTS) $(kionetrctest_DEPENDENCIES) $(EXTRA_kionetrctest_DEPENDENCIES) 
	@rm -f kionetrctest$(EXEEXT)
	$(CXXLINK) $(kionetrctest_OBJECTS) $(kionetrctest_LDADD) $(LIBS)
kiopassdlgtest$(EXEEXT): $(kiopassdlgtest_OBJECTS) $(kiopassdlgtest_DEPENDENCIES) $(EXTRA_kiopassdlgtest_DEPENDENCIES) 
	@rm -f kiopassdlgtest$(EXEEXT)
	$(CXXLINK) $(kiopassdlgtest_OBJECTS) $(kiopassdlgtest_LDADD) $(LIBS)
kioslavetest$(EXEEXT): $(kioslavetest_OBJECTS) $(kioslavetest_DEPENDENCIES) $(EXTRA_kioslavetest_DEPENDENCIES) 
	@rm -f kioslavetest$(EXEEXT)
	$(CXXLINK) $(kioslavetest_OBJECTS) $(kioslavetest_LDADD) $(LIBS)
kmfitest$(EXEEXT): $(kmfitest_OBJECTS) $(kmfitest_DEPENDENCIES) $(EXTRA_kmfitest_DEPENDENCIES) 
	@rm -f kmfitest$(EXEEXT)
	$(CXXLINK) $(kmfitest_OBJECTS) $(kmfitest_LDADD) $(LIBS)
kmimefromext$(EXEEXT): $(kmimefromext_OBJECTS) $(kmimefromext_DEPENDENCIES) $(EXTRA_kmimefromext_DEPENDENCIES) 
	@rm -f kmimefromext$(EXEEXT)
	$(CXXLINK) $(kmimefromext_OBJECTS) $(kmimefromext_LDADD) $(LIBS)
kmimemagictest$(EXEEXT): $(kmimemagictest_OBJECTS) $(kmimemagictest_DEPENDENCIES) $(EXTRA_kmimemagictest_DEPENDENCIES) 
	@rm -f kmimemagictest$(EXEEXT)
	$(CXXLINK) $(kmimemagictest_OBJECTS) $(kmimemagictest_LDADD) $(LIBS)
kmimetypetest$(EXEEXT): $(kmimetypetest_OBJECTS) $(kmimetypetest_DEPENDENCIES) $(EXTRA_kmimetypetest_DEPENDENCIES) 
	@rm -f kmimetypetest$(EXEEXT)
	$(CXXLINK) $(kmimetypetest_OBJECTS) $(kmimetypetest_LDADD) $(LIBS)
kpropsdlgtest$(EXEEXT): $(kpropsdlgtest_OBJECTS) $(kpropsdlgtest_DEPENDENCIES) $(EXTRA_kpropsdlgtest_DEPENDENCIES) 
	@rm -f kpropsdlgtest$(EXEEXT)
	$(CXXLINK) $(kpropsdlgtest_OBJECTS) $(kpropsdlgtest_LDADD) $(LIBS)
kprotocolinfotest$(EXEEXT): $(kprotocolinfotest_OBJECTS) $(kprotocolinfotest_DEPENDENCIES) $(EXTRA_kprotocolinfotest_DEPENDENCIES) 
	@rm -f kprotocolinfotest$(EXEEXT)
	$(CXXLINK) $(kprotocolinfotest_OBJECTS) $(kprotocolinfotest_LDADD) $(LIBS)
kruntest$(EXEEXT): $(kruntest_OBJECTS) $(kruntest_DEPENDENCIES) $(EXTRA_kruntest_DEPENDENCIES) 
	@rm -f kruntest$(EXEEXT)
	$(CXXLINK) $(kruntest_OBJECTS) $(kruntest_LDADD) $(LIBS)
kscantest$(EXEEXT): $(kscantest_OBJECTS) $(kscantest_DEPENDENCIES) $(EXTRA_kscantest_DEPENDENCIES) 
	@rm -f kscantest$(EXEEXT)
	$(CXXLINK) $(kscantest_OBJECTS) $(kscantest_LDADD) $(LIBS)
kshredtest$(EXEEXT): $(kshredtest_OBJECTS) $(kshredtest_DEPENDENCIES) $(EXTRA_kshredtest_DEPENDENCIES) 
	@rm -f kshredtest$(EXEEXT)
	$(CXXLINK) $(kshredtest_OBJECTS) $(kshredtest_LDADD) $(LIBS)
ksycocatest$(EXEEXT): $(ksycocatest_OBJECTS) $(ksycocatest_DEPENDENCIES) $(EXTRA_ksycocatest_DEPENDENCIES) 
	@rm -f ksycocatest$(EXEEXT)
	$(CXXLINK) $(ksycocatest_OBJECTS) $(ksycocatest_LDADD) $(LIBS)
ksycocaupdatetest$(EXEEXT): $(ksycocaupdatetest_OBJECTS) $(ksycocaupdatetest_DEPENDENCIES) $(EXTRA_ksycocaupdatetest_DEPENDENCIES) 
	@rm -f ksycocaupdatetest$(EXEEXT)
	$(CXXLINK) $(ksycocaupdatetest_OBJECTS) $(ksycocaupdatetest_LDADD) $(LIBS)
ktartest$(EXEEXT): $(ktartest_OBJECTS) $(ktartest_DEPENDENCIES) $(EXTRA_ktartest_DEPENDENCIES) 
	@rm -f ktartest$(EXEEXT)
	$(CXXLINK) $(ktartest_OBJECTS) $(ktartest_LDADD) $(LIBS)
ktradertest$(EXEEXT): $(ktradertest_OBJECTS) $(ktradertest_DEPENDENCIES) $(EXTRA_ktradertest_DEPENDENCIES) 
	@rm -f ktradertest$(EXEEXT)
	$(CXXLINK) $(ktradertest_OBJECTS) $(ktradertest_LDADD) $(LIBS)
kurifiltertest$(EXEEXT): $(kurifiltertest_OBJECTS) $(kurifiltertest_DEPENDENCIES) $(EXTRA_kurifiltertest_DEPENDENCIES) 
	@rm -f kurifiltertest$(EXEEXT)
	$(CXXLINK) $(kurifiltertest_OBJECTS) $(kurifiltertest_LDADD) $(LIBS)
kurlcompletiontest$(EXEEXT): $(kurlcompletiontest_OBJECTS) $(kurlcompletiontest_DEPENDENCIES) $(EXTRA_kurlcompletiontest_DEPENDENCIES) 
	@rm -f kurlcompletiontest$(EXEEXT)
	$(CXXLINK) $(kurlcompletiontest_OBJECTS) $(kurlcompletiontest_LDADD) $(LIBS)
kziptest$(EXEEXT): $(kziptest_OBJECTS) $(kziptest_DEPENDENCIES) $(EXTRA_kziptest_DEPENDENCIES) 
	@rm -f kziptest$(EXEEXT)
	$(CXXLINK) $(kziptest_OBJECTS) $(kziptest_LDADD) $(LIBS)
metatest$(EXEEXT): $(metatest_OBJECTS) $(metatest_DEPENDENCIES) $(EXTRA_metatest_DEPENDENCIES) 
	@rm -f metatest$(EXEEXT)
	$(CXXLINK) $(metatest_OBJECTS) $(metatest_LDADD) $(LIBS)
netaccesstest$(EXEEXT): $(netaccesstest_OBJECTS) $(netaccesstest_DEPENDENCIES) $(EXTRA_netaccesstest_DEPENDENCIES) 
	@rm -f netaccesstest$(EXEEXT)
	$(CXXLINK) $(netaccesstest_OBJECTS) $(netaccesstest_LDADD) $(LIBS)
previewtest$(EXEEXT): $(previewtest_OBJECTS) $(previewtest_DEPENDENCIES) $(EXTRA_previewtest_DEPENDENCIES) 
	@rm -f previewtest$(EXEEXT)
	$(CXXLINK) $(previewtest_OBJECTS) $(previewtest_LDADD) $(LIBS)
speed$(EXEEXT): $(speed_OBJECTS) $(speed_DEPENDENCIES) $(EXTRA_speed_DEPENDENCIES) 
	@rm -f speed$(EXEEXT)
	$(CXXLINK) $(speed_OBJECTS) $(speed_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/dataprotocoltest.Po
include ./$(DEPDIR)/getalltest.Po
include ./$(DEPDIR)/jobtest.Po
include ./$(DEPDIR)/kacltest.Po
include ./$(DEPDIR)/kdcopcheck.Po
include ./$(DEPDIR)/kdefaultprogresstest.Po
include ./$(DEPDIR)/kdirlistertest.Po
include ./$(DEPDIR)/kdirwatchtest.Po
include ./$(DEPDIR)/kdirwatchunittest.Plo
include ./$(DEPDIR)/kfiltertest.Po
include ./$(DEPDIR)/kionetrctest.Po
include ./$(DEPDIR)/kiopassdlgtest.Po
include ./$(DEPDIR)/kioslavetest.Po
include ./$(DEPDIR)/kmfitest.Po
include ./$(DEPDIR)/kmimefromext.Po
include ./$(DEPDIR)/kmimemagictest.Po
include ./$(DEPDIR)/kmimetypetest.Po
include ./$(DEPDIR)/kpropsdlgtest.Po
include ./$(DEPDIR)/kprotocolinfotest.Po
include ./$(DEPDIR)/kruntest.Po
include ./$(DEPDIR)/kscantest.Po
include ./$(DEPDIR)/kshredtest.Po
include ./$(DEPDIR)/ksycocatest.Po
include ./$(DEPDIR)/ksycocaupdatetest.Po
include ./$(DEPDIR)/ktartest.Po
include ./$(DEPDIR)/ktradertest.Po
include ./$(DEPDIR)/kurifiltertest.Po
include ./$(DEPDIR)/kurlcompletiontest.Po
include ./$(DEPDIR)/kziptest.Po
include ./$(DEPDIR)/metatest.Po
include ./$(DEPDIR)/netaccesstest.Po
include ./$(DEPDIR)/previewtest.Po
include ./$(DEPDIR)/speed.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_LTLIBRARIES) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-binPROGRAMS clean-checkLTLIBRARIES clean-checkPROGRAMS \
#>- 	clean-generic clean-libtool mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-bcheck  clean-binPROGRAMS clean-checkLTLIBRARIES clean-checkPROGRAMS \
	clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am check-local \
	clean clean-binPROGRAMS clean-checkLTLIBRARIES \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS


# Unfortunately some tests depend on the network settings, it seems
#check: kurifiltertest
#	./kurifiltertest
check-local: kziptest
	./kziptest list $(srcdir)/wronglocalsizes.zip

# kfile meta stuff. Comment this in, if you want a small
# metadata plugin test and "make install".
#kde_module_LTLIBRARIES = dummymeta.la
#dummymeta_la_SOURCES = dummymeta.cpp
#dummymeta_la_LIBADD = $(LIB_KIO)
#dummymeta_la_LDFLAGS = $(all_libraries) -module $(KDE_PLUGIN)

#services_DATA = dummymeta.desktop
#servicesdir = $(kde_servicesdir)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
kdcopcheck.moc: $(srcdir)/kdcopcheck.h
	$(MOC) $(srcdir)/kdcopcheck.h -o kdcopcheck.moc

#>+ 2
mocs: kdcopcheck.moc

#>+ 3
kdirlistertest.moc: $(srcdir)/kdirlistertest.h
	$(MOC) $(srcdir)/kdirlistertest.h -o kdirlistertest.moc

#>+ 2
mocs: kdirlistertest.moc

#>+ 3
jobtest.moc: $(srcdir)/jobtest.h
	$(MOC) $(srcdir)/jobtest.h -o jobtest.moc

#>+ 2
mocs: jobtest.moc

#>+ 3
kruntest.moc: $(srcdir)/kruntest.h
	$(MOC) $(srcdir)/kruntest.h -o kruntest.moc

#>+ 2
mocs: kruntest.moc

#>+ 3
kdirwatchunittest.moc: $(srcdir)/kdirwatchunittest.h
	$(MOC) $(srcdir)/kdirwatchunittest.h -o kdirwatchunittest.moc

#>+ 2
mocs: kdirwatchunittest.moc

#>+ 3
kdirwatchtest.moc: $(srcdir)/kdirwatchtest.h
	$(MOC) $(srcdir)/kdirwatchtest.h -o kdirwatchtest.moc

#>+ 2
mocs: kdirwatchtest.moc

#>+ 3
kioslavetest.moc: $(srcdir)/kioslavetest.h
	$(MOC) $(srcdir)/kioslavetest.h -o kioslavetest.moc

#>+ 2
mocs: kioslavetest.moc

#>+ 3
previewtest.moc: $(srcdir)/previewtest.h
	$(MOC) $(srcdir)/previewtest.h -o previewtest.moc

#>+ 2
mocs: previewtest.moc

#>+ 3
speed.moc: $(srcdir)/speed.h
	$(MOC) $(srcdir)/speed.h -o speed.moc

#>+ 2
mocs: speed.moc

#>+ 3
dummymeta.moc: $(srcdir)/dummymeta.h
	$(MOC) $(srcdir)/dummymeta.h -o dummymeta.moc

#>+ 2
mocs: dummymeta.moc

#>+ 3
clean-metasources:
	-rm -f  kdcopcheck.moc kdirlistertest.moc jobtest.moc kruntest.moc kdirwatchunittest.moc kdirwatchtest.moc kioslavetest.moc previewtest.moc speed.moc dummymeta.moc

#>+ 2
KDE_DIST=kdirwatchtest.h ktradertest dummymeta.desktop kacltest.h Makefile.in wronglocalsizes.zip speed.h kdcopcheck.h jobtest.h kdirwatchunittest.h kruntest.h kioslavetest.h previewtest.h dummymeta.h kdirlistertest.h Makefile.am 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu kio/tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu kio/tests/Makefile
	cd $(top_srcdir) && perl admin/am_edit kio/tests/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 3
final:
	$(MAKE) all-am

#>+ 3
final-install:
	$(MAKE) install-am

#>+ 3
no-final:
	$(MAKE) all-am

#>+ 3
no-final-install:
	$(MAKE) install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 23
kdirwatchunittest.o: kdirwatchunittest.moc 
dummymeta.o: dummymeta.moc 
kruntest.lo: kruntest.moc 
kioslavetest.lo: kioslavetest.moc 
jobtest.o: jobtest.moc 
kioslavetest.o: kioslavetest.moc 
nmcheck: 
kruntest.o: kruntest.moc 
kdirwatchtest.o: kdirwatchtest.moc 
kdirlistertest.o: kdirlistertest.moc 
kdirwatchtest.lo: kdirwatchtest.moc 
nmcheck-am: nmcheck
kdcopcheck.lo: kdcopcheck.moc 
dummymeta.lo: dummymeta.moc 
speed.o: speed.moc 
previewtest.lo: previewtest.moc 
kdirlistertest.lo: kdirlistertest.moc 
previewtest.o: previewtest.moc 
kdirwatchunittest.lo: kdirwatchunittest.moc 
jobtest.lo: jobtest.moc 
kdcopcheck.o: kdcopcheck.moc 
speed.lo: speed.moc 
