# Makefile.in generated by automake 1.11.6 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# kio/bookmarks/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#	This file is part of the KDE libraries
#    Copyright (C) 1997 Stephan Kulow (coolo@kde.org)

#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Library General Public
#    License as published by the Free Software Foundation; either
#    version 2 of the License, or (at your option) any later version.

#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Library General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with this library; see the file COPYING.  If not, write to
#    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
#    Boston, MA 02110-1301, USA.



am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/kdelibs
pkgincludedir = $(includedir)/kdelibs
pkglibdir = $(libdir)/kdelibs
pkglibexecdir = $(libexecdir)/kdelibs
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/admin/Doxyfile.am
subdir = kio/bookmarks
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/dcop/dcop-path.h \
	$(top_builddir)/kdecore/kdemacros.h \
	$(top_builddir)/kio/kssl/ksslconfig.h \
	$(top_builddir)/kjs/global.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libkbookmarks_la_LIBADD =
am_libkbookmarks_la_OBJECTS = kbookmark.lo kbookmarkbar.lo \
	kbookmarkdrag.lo kbookmarkexporter.lo kbookmarkimporter.lo \
	kbookmarkmanager.lo kbookmarkmenu.lo \
	kbookmarkimporter_crash.lo kbookmarkimporter_opera.lo \
	kbookmarkimporter_ie.lo kbookmarkimporter_ns.lo \
	kbookmarkimporter_kde1.lo kbookmarkdombuilder.lo
#>- libkbookmarks_la_OBJECTS = $(am_libkbookmarks_la_OBJECTS)
#>+ 9
libkbookmarks_la_final_OBJECTS = libkbookmarks_la.all_cc.lo 
libkbookmarks_la_nofinal_OBJECTS = kbookmark.lo kbookmarkbar.lo \
	kbookmarkdrag.lo kbookmarkexporter.lo kbookmarkimporter.lo \
	kbookmarkmanager.lo kbookmarkmenu.lo \
	kbookmarkimporter_crash.lo kbookmarkimporter_opera.lo \
	kbookmarkimporter_ie.lo kbookmarkimporter_ns.lo \
	kbookmarkimporter_kde1.lo kbookmarkdombuilder.lo kbookmarkmanager_skel.lo kbookmarknotifier_skel.lo
libkbookmarks_la_OBJECTS = $(libkbookmarks_la_nofinal_OBJECTS)
#libkbookmarks_la_OBJECTS = $(libkbookmarks_la_final_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir) -I$(top_builddir)/dcop -I$(top_builddir)/kdecore -I$(top_builddir)/kio/kssl -I$(top_builddir)/kjs
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libkbookmarks_la_SOURCES)
DIST_SOURCES = $(libkbookmarks_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(includedir)"
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = ${SHELL} /home/rainman/projects/kdelibs/admin/missing --run aclocal-1.11
ACL_LIBS = -lacl -lattr
ALLOCA = 
AMTAR = $${TAR-tar}
AR = i686-pc-linux-gnu-ar
ARTSCCONFIG = 
AUTOCONF = $(SHELL) $(top_srcdir)/admin/cvs.sh configure || touch configure
AUTODIRS = 
AUTOHEADER = ${SHELL} /home/rainman/projects/kdelibs/admin/missing --run autoheader
AUTOMAKE = ${SHELL} /home/rainman/projects/kdelibs/admin/missing --run automake-1.11
AVAHI_CFLAGS = -D_REENTRANT -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -D_REENTRANT -I/usr/qt/3/include 
AVAHI_LIBS = -lavahi-qt3 -lavahi-common -lavahi-client 
AWK = gawk
CC = i686-pc-linux-gnu-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -std=iso9899:1990 -W -Wall -Wchar-subscripts -Wshadow -Wpointer-arith -Wmissing-prototypes -Wwrite-strings -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -g3 -fno-inline  -O0 -ggdb3 -Wall -Wformat-security -Wmissing-format-attribute
CONF_FILES =  $(top_srcdir)/configure.in.in $(top_srcdir)/./arts/configure.in.in $(top_srcdir)/./dcop/configure.in.in $(top_srcdir)/./dnssd/configure.in.bot $(top_srcdir)/./dnssd/configure.in.in $(top_srcdir)/./kate/part/configure.in.in $(top_srcdir)/./kdecore/configure.in.in $(top_srcdir)/./kdecore/malloc/configure.in.in $(top_srcdir)/./kdefx/configure.in.in $(top_srcdir)/./kdeprint/configure.in.in $(top_srcdir)/./kdeprint/cups/configure.in.in $(top_srcdir)/./kdesu/configure.in.in $(top_srcdir)/./kdoctools/configure.in.in $(top_srcdir)/./khtml/configure.in.in $(top_srcdir)/./khtml/java/configure.in.in $(top_srcdir)/./kimgio/configure.in.in $(top_srcdir)/./kinit/configure.in.in $(top_srcdir)/./kio/kio/configure.in.in $(top_srcdir)/./kio/kssl/configure.in.in $(top_srcdir)/./kio/misc/kpac/configure.in.in $(top_srcdir)/./kioslave/bzip2/configure.in.in $(top_srcdir)/./kioslave/ftp/configure.in.in $(top_srcdir)/./kioslave/http/configure.in.bot $(top_srcdir)/./kioslave/http/configure.in.in $(top_srcdir)/./kjs/configure.in.in $(top_srcdir)/./kspell2/plugins/configure.in.bot $(top_srcdir)/./kspell2/plugins/configure.in.in $(top_srcdir)/./libkmid/configure.in.in $(top_srcdir)/./libkscreensaver/configure.in.in $(top_srcdir)/configure.in.mid $(top_srcdir)/configure.in.bot
CPP = i686-pc-linux-gnu-gcc -E
CPPFLAGS =  -DQT_THREAD_SUPPORT  -D_REENTRANT
CXX = i686-pc-linux-gnu-g++
CXXCPP = i686-pc-linux-gnu-g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wno-long-long -Wundef -ansi -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -Wcast-align -Wchar-subscripts -Wall -W -Wpointer-arith -fno-builtin -g3 -fno-inline -O0 -ggdb3 -Wall -Wformat-security -Wmissing-format-attribute -Wno-non-virtual-dtor -fno-exceptions -fno-check-new -fno-common  -DQT_CLEAN_NAMESPACE -DQT_NO_ASCII_CAST -DQT_NO_STL -DQT_NO_COMPAT -DQT_NO_TRANSLATION
CYGPATH_W = echo
DCOPIDL = $(top_builddir)/dcop/dcopidl/dcopidl
DCOPIDL2CPP = $(top_builddir)/dcop/dcopidl2cpp/dcopidl2cpp
DCOPIDLNG = $(top_srcdir)/dcop/dcopidlng/dcopidlng
DCOP_DEPENDENCIES = $(DCOPIDL) $(DCOPIDLNG)
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN = 
DOXYGEN_PROJECT_NAME = The KDE API Reference
DOXYGEN_PROJECT_NUMBER = Version 3.5.10
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_PERMISSIVE_FLAG = -fpermissive
EXEEXT = 
EXR_FLAGS = 
EXTRA_SUBDIRS = 
FGREP = /bin/grep -F
FRAMEWORK_COREAUDIO = 
GMSGFMT = /usr/bin/gmsgfmt
GREP = /bin/grep
GSSAPI_INCS = 
GSSAPI_LIBS = 
GSSAPI_RPATH = 
HAVE_GCC_VISIBILITY = 0
HAVE_MITSHM = 
HAVE_SENDFILE = 
HELP_SUBDIR = kdoctools
ICE_RLIB = ICE/libkICE.la
ICE_SUBDIR = ICE
INCLTDL = -I${top_srcdir}/libltdl
INSTALL = /usr/bin/install -c -p
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL} $(INSTALL_STRIP_FLAG)
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KCFG_DEPENDENCIES = $(KCONFIG_COMPILER)
KCONFIG_COMPILER = $(top_builddir)/kdecore/kconfig_compiler/kconfig_compiler
KDEINIT_SETUID = 1
KDEINIT_XFT_INCLUDES = -I/usr/include/freetype2 
KDE_CHECK_PLUGIN = $(KDE_PLUGIN) -rpath $(libdir)
KDE_EXTRA_RPATH = 
KDE_FORCE_INLINE = -finline-limit=100000
KDE_HAS_DOXYGEN = no
KDE_HAVE_DOT = YES
KDE_INCLUDES = -I${prefix}/include
KDE_LDFLAGS = -L/usr/kde/git/lib
KDE_MT_LDFLAGS = 
KDE_MT_LIBS = -lpthread
KDE_NO_UNDEFINED = -Wl,--no-undefined -Wl,--allow-shlib-undefined
KDE_PLUGIN = -avoid-version -module -no-undefined $(KDE_NO_UNDEFINED) $(KDE_RPATH) $(KDE_MT_LDFLAGS)
KDE_RPATH = -R $(libdir) -R $(kde_libraries) -R $(qt_libraries) -R $(x_libraries)
KDE_USE_CLOSURE_FALSE = 
KDE_USE_CLOSURE_TRUE = #
KDE_USE_FINAL_FALSE = 
KDE_USE_FINAL_TRUE = #
KDE_USE_FPIE = -fPIE
KDE_USE_NMCHECK_FALSE = 
KDE_USE_NMCHECK_TRUE = #
KDE_USE_PIE = -pie
KDE_XSL_STYLESHEET = $(top_srcdir)/kdoctools/customization/kde-chunk.xsl
KJAVA_POLICYPATH = /usr/kde/git/share/apps/kjava/-
LD = /usr/i686-pc-linux-gnu/bin/ld
LDFLAGS = 
LDFLAGS_AS_NEEDED = 
LDFLAGS_NEW_DTAGS = 
LIBADD_DL = -ldl
LIBART_CFLAGS = -I/usr/include/libart-2.0
LIBART_LIBS = -L/usr/lib -lart_lgpl_2 -lm
LIBART_RPATH = 
LIBASOUND = -lasound
LIBBZ2 = -lbz2
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBDL = -ldl
LIBFAM = -lfam
LIBICE = 
LIBJPEG = -ljpeg
LIBLTDL = ${top_build_prefix}libltdl/libltdlc.la
LIBOBJS = 
LIBPCRE = -lpcreposix -lpcre
LIBPNG = -lpng -lz -lm
LIBPTHREAD = -lpthread
LIBRESOLV = -lresolv
LIBS = 
LIBSM = -lSM -lICE
LIBSOCKET = 
LIBSSL = -lssl -lcrypto
LIBTHAI = 
LIBTIFF = -ltiff -ljpeg -lz
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUCB = 
LIBUTEMPTER = 
LIBUTIL = -lutil
LIBVOLMGT = 
LIBXML_CFLAGS = -I/usr/include/libxml2
LIBXML_LIBS = -lxml2 -lz -lm -ldl
LIBXML_RPATH = 
LIBXSLT_CFLAGS = -I/usr/include/libxml2
LIBXSLT_LIBS = -L/usr/lib -lxslt -lxml2 -lz -ldl -lm -lrt
LIBXSLT_RPATH = 
LIBZ = -lz
LIB_CUPS = -lcups
LIB_EXR = 
LIB_IDN = -lidn
LIB_JASPER = -ljasper -ljpeg -lm
LIB_KAB = $(top_builddir)/kab/libkab.la
LIB_KABC = $(top_builddir)/kabc/libkabc.la
LIB_KDECORE = $(top_builddir)/kdecore/libkdecore.la
LIB_KDED = 
LIB_KDEPIM = -lkdepim
LIB_KDEPRINT = $(top_builddir)/kdeprint/libkdeprint.la
LIB_KDEUI = $(top_builddir)/kdeui/libkdeui.la
LIB_KDNSSD = -lkdnssd
LIB_KFILE = $(top_builddir)/kio/libkio.la
LIB_KFM = 
LIB_KHTML = $(top_builddir)/khtml/libkhtml.la
LIB_KIMGIO = $(top_builddir)/kimgio/libkimgio.la
LIB_KIMPROXY = -lkimproxy
LIB_KIO = $(top_builddir)/kio/libkio.la
LIB_KJS = -lkjs
LIB_KNEWSTUFF = $(top_builddir)/knewstuff/libknewstuff.la
LIB_KPARTS = $(top_builddir)/kparts/libkparts.la
LIB_KSPELL = -lkspell
LIB_KSYCOCA = $(top_builddir)/kio/libkio.la
LIB_KUNITTEST = $(top_builddir)/kunittest/libkunittest.la
LIB_KUTILS = -lkutils
LIB_POLL = 
LIB_QPE = 
LIB_QT = -lqt-mt  $(LIBZ) $(LIBPNG) -lXext $(LIB_X11) $(LIBSM) -lpthread
LIB_SMB = -lsmb
LIB_X11 = -lX11 $(LIBSOCKET)
LIB_XEXT = -lXext
LIB_XRENDER = -lXrender
LIPO = 
LN_S = ln -s
LTDLDEPS = ${top_build_prefix}libltdl/libltdlc.la
LTDLINCL = -I${top_srcdir}/libltdl
LTLIBOBJS = 
LUA = 
LUA_INCLUDES = 
LUA_LIBS = 
MAKEINFO = ${SHELL} /home/rainman/projects/kdelibs/admin/missing --run makeinfo
MAKEKDEWIDGETS = $(top_builddir)/kdewidgets/makekdewidgets
MCOPIDL = 
MD5SUM = /usr/bin/md5sum
MEINPROC = $(top_builddir)/kdoctools/meinproc --srcdir=$(top_srcdir)/kdoctools
MEINPROC_DEP = $(top_builddir)/kdoctools/meinproc
MKDIR_P = /bin/mkdir -p
MOC = /usr/qt/3/bin/moc
MSGFMT = /usr/bin/gmsgfmt
NM = /usr/bin/nm -B
NMEDIT = 
NOOPT_CFLAGS = -O0
NOOPT_CXXFLAGS = -O0
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = kdelibs
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PCRECFLAGS = 
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
QNAMESPACE_H = /usr/qt/3/include/qnamespace.h
QTDOCDIR = NO
QTE_NORTTI = 
QT_INCLUDES = -I/usr/qt/3/include
QT_LDFLAGS = -L/usr/qt/3/lib
RANLIB = i686-pc-linux-gnu-ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SSL_INCLUDES = 
SSL_LDFLAGS = 
STRIP = i686-pc-linux-gnu-strip
TOPSUBDIRS =  dcop libltdl kdefx kdecore kunittest kdeui kdesu kjs kwallet kio kded arts dnssd kab kconf_update kdoctools kimgio kioslave knewstuff kparts kresources kstyles kutils libkmid libkscreensaver licenses mimetypes pics doc kcert kinit kdeprint kabc kspell2 kmdi kcmshell khtml interfaces kdewidgets kate
UIC = /usr/qt/3/bin/uic -nounload
UIC_TR = tr2i18n
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_RTTI = 
USE_THREADS = 
VERSION = 3.5.10
WOVERLOADED_VIRTUAL = -Woverloaded-virtual
XGETTEXT = /usr/bin/xgettext
XMKMF = 
XMLLINT = /usr/bin/xmllint
X_EXTRA_LIBS = 
X_INCLUDES = -I.
X_LDFLAGS = -L/usr/lib32
X_PRE_LIBS = 
X_RPATH = -R $(x_libraries)
abs_builddir = /home/rainman/projects/kdelibs/kio/bookmarks
abs_srcdir = /home/rainman/projects/kdelibs/kio/bookmarks
abs_top_builddir = /home/rainman/projects/kdelibs
abs_top_srcdir = /home/rainman/projects/kdelibs
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
all_includes = -I$(top_srcdir)/dcop -I$(top_srcdir)/libltdl -I$(top_srcdir)/kdefx -I$(top_builddir)/kdecore -I$(top_srcdir)/kdecore -I$(top_srcdir)/kdecore/network -I$(top_srcdir)/kdeui -I$(top_srcdir)/kio -I$(top_srcdir)/kio/kio -I$(top_srcdir)/kio/kfile -I$(top_srcdir) $(QT_INCLUDES) $(X_INCLUDES) $(KDE_INCLUDES) $(USER_INCLUDES)
all_libraries = -L/usr/kde/git/lib -L/usr/qt/3/lib -L/usr/lib32   
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = i686-pc-linux-gnu
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
cups_modeldir = /usr/share/cups/model
datadir = /usr/kde/git/share
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
have_pkg_config = yes
host = i686-pc-linux-gnu
host_alias = i686-pc-linux-gnu
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = /usr/kde/git/share/info
install_sh = ${SHELL} /home/rainman/projects/kdelibs/admin/install-sh
kde_appsdir = ${datadir}/applnk
kde_bindir = ${exec_prefix}/bin
kde_confdir = ${datadir}/config
kde_cups_config = /usr/bin/cups-config
kde_datadir = ${datadir}/apps
kde_htmldir = ${datadir}/doc/HTML
kde_icondir = ${datadir}/icons
kde_includes = ${prefix}/include
kde_kcfgdir = ${datadir}/config.kcfg
kde_libraries = /usr/kde/git/lib
kde_libs_htmldir = $(kde_htmldir)
kde_libs_prefix = $(prefix)
kde_locale = ${datadir}/locale
kde_mimedir = ${datadir}/mimelnk
kde_moduledir = ${libdir}/kde3
kde_qtver = 3
kde_servicesdir = ${datadir}/services
kde_servicetypesdir = ${datadir}/servicetypes
kde_sounddir = ${datadir}/sounds
kde_styledir = ${libdir}/kde3/plugins/styles
kde_templatesdir = ${datadir}/templates
kde_wallpaperdir = ${datadir}/wallpapers
kde_widgetdir = ${libdir}/kde3/plugins/designer
kdeinitdir = $(kde_moduledir)
libdir = /usr/kde/git/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = /var/lib
lt_ECHO = echo
mandir = /usr/kde/git/share/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
path_su = /bin/su
path_sudo = /usr/bin/sudo
pdfdir = ${docdir}
prefix = /usr/kde/git
program_transform_name = s,x,x,
psdir = ${docdir}
qt_includes = /usr/qt/3/include
qt_libraries = /usr/qt/3/lib
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /usr/kde/git/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
x_includes = .
x_libraries = /usr/lib32
xdg_appsdir = ${datadir}/applications/kde
xdg_directorydir = ${datadir}/desktop-directories
xdg_menudir = ${sysconfdir}/xdg/menus
INCLUDES = -I$(srcdir)/../libltdl/ -I$(top_srcdir) -I$(top_srcdir)/kdefx -I$(top_builddir)/kio/kio $(all_includes)
noinst_LTLIBRARIES = libkbookmarks.la
#>- METASOURCES = AUTO

# convenience lib - no _LDFLAGS or _LIBADD !
include_HEADERS = \
	kbookmark.h kbookmarkbar.h kbookmarkdrag.h kbookmarkexporter.h \
	kbookmarkimporter.h kbookmarkmanager.h kbookmarkmenu.h kbookmarknotifier.h \
	kbookmarkimporter_crash.h kbookmarkimporter_opera.h kbookmarkimporter_ie.h \
	kbookmarkimporter_ns.h kbookmarkimporter_kde1.h kbookmarkdombuilder.h 

#>- libkbookmarks_la_SOURCES = \
#>- 	kbookmark.cc kbookmarkbar.cc kbookmarkdrag.cc kbookmarkexporter.cc \
#>- 	kbookmarkimporter.cc kbookmarkmanager.cc kbookmarkmenu.cc \
#>- 	kbookmarkimporter_crash.cc kbookmarkimporter_opera.cc kbookmarkimporter_ie.cc \
#>- 	kbookmarkimporter_ns.cc kbookmarkimporter_kde1.cc kbookmarkdombuilder.cc \
#>- 	kbookmarkmanager.skel kbookmarknotifier.skel
#>+ 6
libkbookmarks_la_SOURCES=\
	kbookmark.cc kbookmarkbar.cc kbookmarkdrag.cc kbookmarkexporter.cc \
	kbookmarkimporter.cc kbookmarkmanager.cc kbookmarkmenu.cc \
	kbookmarkimporter_crash.cc kbookmarkimporter_opera.cc kbookmarkimporter_ie.cc \
	kbookmarkimporter_ns.cc kbookmarkimporter_kde1.cc kbookmarkdombuilder.cc \
	  kbookmarkmanager_skel.cc kbookmarknotifier_skel.cc

#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/admin/Doxyfile.am $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
#>- 	        && { if test -f $@; then exit 0; else break; fi; }; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu kio/bookmarks/Makefile'; \
#>- 	$(am__cd) $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu kio/bookmarks/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu kio/bookmarks/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu kio/bookmarks/Makefile
	cd $(top_srcdir) && perl admin/am_edit kio/bookmarks/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/admin/Doxyfile.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libkbookmarks.la: $(libkbookmarks_la_OBJECTS) $(libkbookmarks_la_DEPENDENCIES) $(EXTRA_libkbookmarks_la_DEPENDENCIES) 
	$(CXXLINK)  $(libkbookmarks_la_OBJECTS) $(libkbookmarks_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/kbookmark.Plo
include ./$(DEPDIR)/kbookmarkbar.Plo
include ./$(DEPDIR)/kbookmarkdombuilder.Plo
include ./$(DEPDIR)/kbookmarkdrag.Plo
include ./$(DEPDIR)/kbookmarkexporter.Plo
include ./$(DEPDIR)/kbookmarkimporter.Plo
include ./$(DEPDIR)/kbookmarkimporter_crash.Plo
include ./$(DEPDIR)/kbookmarkimporter_ie.Plo
include ./$(DEPDIR)/kbookmarkimporter_kde1.Plo
include ./$(DEPDIR)/kbookmarkimporter_ns.Plo
include ./$(DEPDIR)/kbookmarkimporter_opera.Plo
include ./$(DEPDIR)/kbookmarkmanager.Plo
include ./$(DEPDIR)/kbookmarkmenu.Plo

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-idl clean-bcheck clean-final  clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data-local install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-local

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am \
	install-data-local install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-includeHEADERS uninstall-local

apidox-am-yes:
	@if test \! -d "$(top_srcdir)/doc/common/" && test -z "$$DOXDATA" ; then \
		export DOXDATA=$(kde_libs_htmldir)/en/common ; \
	fi ; \
	abs_top_srcdir=`cd $(top_srcdir) && pwd` ;\
	test -d $(top_builddir)/apidocs || \
		( cd $(top_builddir) && sh $$abs_top_srcdir/admin/doxygen.sh \
		--no-modulename --installdir=$(kde_libs_htmldir)/en \
		--no-recurse $(abs_top_srcdir) . ) ; \
	cd $(top_builddir) && sh $$abs_top_srcdir/admin/doxygen.sh \
		--recurse --no-modulename --installdir=$(kde_libs_htmldir)/en \
		$$abs_top_srcdir $(subdir)

apidox-am-toplevel-yes:
	@if test \! -d "$(top_srcdir)/doc/common/" && test -z "$$ADMIN" ; then \
		export DOXDATA=$(kde_libs_htmldir)/en/common ; \
	fi ; \
	abs_top_srcdir=`cd $(top_srcdir) && pwd` ;\
	cd $(top_builddir) && sh $$abs_top_srcdir/admin/doxygen.sh \
		--no-modulename --installdir=$(kde_libs_htmldir)/en \
		$$abs_top_srcdir

apidox-am-no:

apidox-am-toplevel-no:

apidox:
	@if test "$(subdir)" != "."; then \
		$(MAKE) apidox-am-no ;\
	else \
		$(MAKE) apidox-am-toplevel-no ;\
	fi

install-data-local: install-apidox

install-apidox:
	@if test "$(subdir)" != "."; then \
		$(mkinstalldirs) $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir)/html ; \
		if test -f $(top_builddir)/apidocs/$(subdir)/$(subdir).tag; then \
		echo $(INSTALL_DATA) $(top_builddir)/apidocs/$(subdir)/$(subdir).tag $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); \
		$(INSTALL_DATA) $(top_builddir)/apidocs/$(subdir)/$(subdir).tag $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); \
		fi; \
		if test -d $(top_builddir)/apidocs/$(subdir)/html; then \
			list=`ls $(top_builddir)/apidocs/$(subdir)/html`; \
			echo "installing $(top_builddir)/apidocs/$(subdir)/html" ;\
			for file in $$list; do \
				$(INSTALL_DATA) $(top_builddir)/apidocs/$(subdir)/html/$$file $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir)/html; \
		done; \
		fi; \
	else\
		if test -d $(top_builddir)/apidocs; then \
		$(mkinstalldirs) $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs ;\
		list=`cd $(top_builddir)/apidocs && ls -1`; \
		echo "installing $(top_builddir)/apidocs/$$file" ;\
		echo "target directory $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs" ; \
		for file in $$list; do \
			if test -f $(top_builddir)/apidocs/$$file; then \
				$(INSTALL_DATA) $(top_builddir)/apidocs/$$file $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs; \
			fi; \
		done ; fi; \
	fi

uninstall-local: uninstall-apidox

uninstall-apidox:
	@if test "$(subdir)" != "."; then \
		if test -d $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); then \
			rm -rf $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); \
		fi \
	else \
		if test -d $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs; then \
			rm -rf $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs; \
		fi \
	fi

install-apidox-recurse: install-apidox
	@set fnord $(MAKEFLAGS); amf=$$2; if test -n '$(SUBDIRS)'; then \
	    list='$(SUBDIRS)'; \
	    for subdir in $$list; do \
		if grep '^include .*Doxyfile.am' $(srcdir)/$$subdir/Makefile.am > /dev/null ; then \
		echo "Installing apidox from $$subdir"; \
		if test "$$subdir" != "."; then \
			(cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) GENERATE_FLAG=no install-apidox-recurse) || exit 1; \
		fi ; fi ;\
	    done; \
	fi

.PHONY: apidox-am-yes apidox-am-no install-data-local install-apidox install-apidox uninstall-local uninstall-apidox uninstall-apidox apidox apidox-am-toplevel-no apidox-am-toplevel-yes

# Local Variables:
# mode: makefile
# End:

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 9
kbookmarkmanager.kidl: $(srcdir)/kbookmarkmanager.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(srcdir)/kbookmarkmanager.h > kbookmarkmanager.kidl || ( rm -f kbookmarkmanager.kidl ; false )
kbookmarkmanager_skel.cc: kbookmarkmanager.kidl
	$(DCOPIDL2CPP) --c++-suffix cc --no-signals --no-stub kbookmarkmanager.kidl
kbookmarknotifier.kidl: $(srcdir)/kbookmarknotifier.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(srcdir)/kbookmarknotifier.h > kbookmarknotifier.kidl || ( rm -f kbookmarknotifier.kidl ; false )
kbookmarknotifier_skel.cc: kbookmarknotifier.kidl
	$(DCOPIDL2CPP) --c++-suffix cc --no-signals --no-stub kbookmarknotifier.kidl

#>+ 3
kbookmarkmanager.moc: $(srcdir)/kbookmarkmanager.h
	$(MOC) $(srcdir)/kbookmarkmanager.h -o kbookmarkmanager.moc

#>+ 2
mocs: kbookmarkmanager.moc

#>+ 3
kbookmarkimporter.moc: $(srcdir)/kbookmarkimporter.h
	$(MOC) $(srcdir)/kbookmarkimporter.h -o kbookmarkimporter.moc

#>+ 2
mocs: kbookmarkimporter.moc

#>+ 3
kbookmarkmenu.moc: $(srcdir)/kbookmarkmenu.h
	$(MOC) $(srcdir)/kbookmarkmenu.h -o kbookmarkmenu.moc

#>+ 2
mocs: kbookmarkmenu.moc

#>+ 3
kbookmarkimporter_opera.moc: $(srcdir)/kbookmarkimporter_opera.h
	$(MOC) $(srcdir)/kbookmarkimporter_opera.h -o kbookmarkimporter_opera.moc

#>+ 2
mocs: kbookmarkimporter_opera.moc

#>+ 3
kbookmarkimporter_ie.moc: $(srcdir)/kbookmarkimporter_ie.h
	$(MOC) $(srcdir)/kbookmarkimporter_ie.h -o kbookmarkimporter_ie.moc

#>+ 2
mocs: kbookmarkimporter_ie.moc

#>+ 3
kbookmarkimporter_crash.moc: $(srcdir)/kbookmarkimporter_crash.h
	$(MOC) $(srcdir)/kbookmarkimporter_crash.h -o kbookmarkimporter_crash.moc

#>+ 2
mocs: kbookmarkimporter_crash.moc

#>+ 3
kbookmarkimporter_ns.moc: $(srcdir)/kbookmarkimporter_ns.h
	$(MOC) $(srcdir)/kbookmarkimporter_ns.h -o kbookmarkimporter_ns.moc

#>+ 2
mocs: kbookmarkimporter_ns.moc

#>+ 3
kbookmarkbar.moc: $(srcdir)/kbookmarkbar.h
	$(MOC) $(srcdir)/kbookmarkbar.h -o kbookmarkbar.moc

#>+ 2
mocs: kbookmarkbar.moc

#>+ 3
kbookmarkmenu_p.moc: $(srcdir)/kbookmarkmenu_p.h
	$(MOC) $(srcdir)/kbookmarkmenu_p.h -o kbookmarkmenu_p.moc

#>+ 2
mocs: kbookmarkmenu_p.moc

#>+ 3
kbookmarkdombuilder.moc: $(srcdir)/kbookmarkdombuilder.h
	$(MOC) $(srcdir)/kbookmarkdombuilder.h -o kbookmarkdombuilder.moc

#>+ 2
mocs: kbookmarkdombuilder.moc

#>+ 3
clean-metasources:
	-rm -f  kbookmarkmanager.moc kbookmarkimporter.moc kbookmarkmenu.moc kbookmarkimporter_opera.moc kbookmarkimporter_ie.moc kbookmarkimporter_crash.moc kbookmarkimporter_ns.moc kbookmarkbar.moc kbookmarkmenu_p.moc kbookmarkdombuilder.moc

#>+ 2
KDE_DIST=Makefile.in dptrtemplate.h kbookmarkmenu_p.h kbookmarknotifier.kidl Makefile.am kbookmarkmanager.kidl 

#>+ 5
clean-idl:
	-rm -f \
	kbookmarkmanager_skel.cc kbookmarkmanager_skel.h kbookmarkmanager.kidl \
	kbookmarknotifier_skel.cc kbookmarknotifier_skel.h kbookmarknotifier.kidl 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu kio/bookmarks/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu kio/bookmarks/Makefile
	cd $(top_srcdir) && perl admin/am_edit kio/bookmarks/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in $(include_HEADERS); do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
libkbookmarks_la.all_cc.cc: $(srcdir)/Makefile.in $(srcdir)/kbookmark.cc $(srcdir)/kbookmarkbar.cc $(srcdir)/kbookmarkdrag.cc $(srcdir)/kbookmarkexporter.cc $(srcdir)/kbookmarkimporter.cc $(srcdir)/kbookmarkmanager.cc $(srcdir)/kbookmarkmenu.cc $(srcdir)/kbookmarkimporter_crash.cc $(srcdir)/kbookmarkimporter_opera.cc $(srcdir)/kbookmarkimporter_ie.cc $(srcdir)/kbookmarkimporter_ns.cc $(srcdir)/kbookmarkimporter_kde1.cc $(srcdir)/kbookmarkdombuilder.cc $(srcdir)/kbookmarkmanager_skel.cc $(srcdir)/kbookmarknotifier_skel.cc  kbookmarkmanager.moc kbookmarkimporter.moc kbookmarkmenu.moc kbookmarkimporter_opera.moc kbookmarkimporter_ie.moc kbookmarkimporter_crash.moc kbookmarkimporter_ns.moc kbookmarkmenu_p.moc kbookmarkbar.moc kbookmarkdombuilder.moc
	@echo 'creating libkbookmarks_la.all_cc.cc ...'; \
	rm -f libkbookmarks_la.all_cc.files libkbookmarks_la.all_cc.final; \
	echo "#define KDE_USE_FINAL 1" >> libkbookmarks_la.all_cc.final; \
	for file in kbookmark.cc kbookmarkbar.cc kbookmarkdrag.cc kbookmarkexporter.cc kbookmarkimporter.cc kbookmarkmanager.cc kbookmarkmenu.cc kbookmarkimporter_crash.cc kbookmarkimporter_opera.cc kbookmarkimporter_ie.cc kbookmarkimporter_ns.cc kbookmarkimporter_kde1.cc kbookmarkdombuilder.cc kbookmarkmanager_skel.cc kbookmarknotifier_skel.cc ; do \
	  echo "#include \"$$file\"" >> libkbookmarks_la.all_cc.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libkbookmarks_la.all_cc.final; \
	done; \
	cat libkbookmarks_la.all_cc.final libkbookmarks_la.all_cc.files > libkbookmarks_la.all_cc.cc; \
	rm -f libkbookmarks_la.all_cc.final libkbookmarks_la.all_cc.files

#>+ 3
clean-final:
	-rm -f libkbookmarks_la.all_cc.cc

#>+ 3
final:
	$(MAKE) libkbookmarks_la_OBJECTS="$(libkbookmarks_la_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) libkbookmarks_la_OBJECTS="$(libkbookmarks_la_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) libkbookmarks_la_OBJECTS="$(libkbookmarks_la_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) libkbookmarks_la_OBJECTS="$(libkbookmarks_la_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 21
kbookmarkimporter_opera.lo: kbookmarkimporter_opera.moc 
kbookmarkmanager.lo: kbookmarkmanager.moc 
kbookmarkimporter_ie.lo: kbookmarkimporter_ie.moc 
kbookmarkmanager.o: kbookmarkmanager.moc 
kbookmarkmenu.o: kbookmarkmenu.moc kbookmarkmenu_p.moc 
kbookmarkimporter_ns.o: kbookmarkimporter_ns.moc 
kbookmarkimporter_crash.lo: kbookmarkimporter_crash.moc 
kbookmarkimporter_crash.o: kbookmarkimporter_crash.moc 
nmcheck: 
kbookmarkimporter_ns.lo: kbookmarkimporter_ns.moc 
kbookmarkbar.o: kbookmarkbar.moc 
kbookmarkdombuilder.lo: kbookmarkdombuilder.moc 
kbookmarkimporter_opera.o: kbookmarkimporter_opera.moc 
nmcheck-am: nmcheck
kbookmarkimporter.o: kbookmarkimporter.moc 
kbookmarkdombuilder.o: kbookmarkdombuilder.moc 
kbookmarkimporter_ie.o: kbookmarkimporter_ie.moc 
kbookmarkbar.lo: kbookmarkbar.moc 
kbookmarkimporter.lo: kbookmarkimporter.moc 
kbookmarkmenu.lo: kbookmarkmenu.moc kbookmarkmenu_p.moc 
