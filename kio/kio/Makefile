# Makefile.in generated by automake 1.11.6 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# kio/kio/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#    This file is part of the KDE libraries
#    Copyright (C) 1997 Torben Weis (weis@kde.org)

#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Library General Public
#    License as published by the Free Software Foundation; either
#    version 2 of the License, or (at your option) any later version.

#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Library General Public License for more details.

#    You should have received a copy of the GNU Library General Public License
#    along with this library; see the file COPYING.LIB.  If not, write to
#    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
#    Boston, MA 02110-1301, USA.



am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/kdelibs
pkgincludedir = $(includedir)/kdelibs
pkglibdir = $(libdir)/kdelibs
pkglibexecdir = $(libexecdir)/kdelibs
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
DIST_COMMON = $(include_HEADERS) $(kioinclude_HEADERS) \
	$(noinst_HEADERS) $(srcdir)/../../admin/Doxyfile.am \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
subdir = kio/kio
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/dcop/dcop-path.h \
	$(top_builddir)/kdecore/kdemacros.h \
	$(top_builddir)/kio/kssl/ksslconfig.h \
	$(top_builddir)/kjs/global.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libkiocore_la_LIBADD =
am_libkiocore_la_OBJECTS = authinfo.lo kshred.lo kprotocolmanager.lo \
	slave.lo slaveinterface.lo sessiondata.lo scheduler.lo \
	connection.lo job.lo global.lo slaveconfig.lo \
	kurlpixmapprovider.lo netaccess.lo paste.lo pastedialog.lo \
	kmimemagic.lo tcpslavebase.lo slavebase.lo passdlg.lo \
	forwardingslavebase.lo progressbase.lo defaultprogress.lo \
	statusbarprogress.lo kdirnotify.lo kdirnotify_stub.lo \
	observer.lo kemailsettings.lo kprotocolinfo.lo renamedlg.lo \
	skipdlg.lo kremoteencoding.lo kmimetypechooser.lo
#>- libkiocore_la_OBJECTS = $(am_libkiocore_la_OBJECTS)
#>+ 12
libkiocore_la_final_OBJECTS = libkiocore_la.all_cpp.lo 
libkiocore_la_nofinal_OBJECTS = authinfo.lo kshred.lo kprotocolmanager.lo \
	slave.lo slaveinterface.lo sessiondata.lo scheduler.lo \
	connection.lo job.lo global.lo slaveconfig.lo \
	kurlpixmapprovider.lo netaccess.lo paste.lo pastedialog.lo \
	kmimemagic.lo tcpslavebase.lo slavebase.lo passdlg.lo \
	forwardingslavebase.lo progressbase.lo defaultprogress.lo \
	statusbarprogress.lo kdirnotify.lo kdirnotify_stub.lo \
	observer.lo kemailsettings.lo kprotocolinfo.lo renamedlg.lo \
	skipdlg.lo kremoteencoding.lo kmimetypechooser.lo observer_stub.lo kdirnotify_skel.lo uiserver_stub.lo observer_skel.lo
libkiocore_la_OBJECTS = $(libkiocore_la_nofinal_OBJECTS)
#libkiocore_la_OBJECTS = $(libkiocore_la_final_OBJECTS)
libksycoca_la_LIBADD =
am_libksycoca_la_OBJECTS = kdirwatch.lo kfileshare.lo ksambashare.lo \
	knfsshare.lo ktrader.lo ktraderparse.lo ktraderparsetree.lo \
	kservicetypefactory.lo kservicetype.lo kmimetype.lo \
	kservicegroup.lo kservice.lo kservicefactory.lo \
	kuserprofile.lo kservicegroupfactory.lo kurifilter.lo \
	kfilterbase.lo kfilterdev.lo kshellcompletion.lo \
	kurlcompletion.lo kautomount.lo krun.lo kfileitem.lo \
	kdirlister.lo kimageio.lo yacc.lo lex.lo chmodjob.lo kscan.lo \
	kar.lo ktar.lo kzip.lo previewjob.lo metainfojob.lo davjob.lo \
	kdatatool.lo karchive.lo kfilefilter.lo kfilemetainfo.lo \
	kdcopservicestarter.lo dataslave.lo dataprotocol.lo kacl.lo \
	posixacladdons.lo
#>- libksycoca_la_OBJECTS = $(am_libksycoca_la_OBJECTS)
#>+ 15
libksycoca_la_final_OBJECTS = yacc.lo lex.lo libksycoca_la.all_cpp.lo 
libksycoca_la_nofinal_OBJECTS = kdirwatch.lo kfileshare.lo ksambashare.lo \
	knfsshare.lo ktrader.lo ktraderparse.lo ktraderparsetree.lo \
	kservicetypefactory.lo kservicetype.lo kmimetype.lo \
	kservicegroup.lo kservice.lo kservicefactory.lo \
	kuserprofile.lo kservicegroupfactory.lo kurifilter.lo \
	kfilterbase.lo kfilterdev.lo kshellcompletion.lo \
	kurlcompletion.lo kautomount.lo krun.lo kfileitem.lo \
	kdirlister.lo kimageio.lo yacc.lo lex.lo chmodjob.lo kscan.lo \
	kar.lo ktar.lo kzip.lo previewjob.lo metainfojob.lo davjob.lo \
	kdatatool.lo karchive.lo kfilefilter.lo kfilemetainfo.lo \
	kdcopservicestarter.lo dataslave.lo dataprotocol.lo kacl.lo \
	posixacladdons.lo
libksycoca_la_OBJECTS = $(libksycoca_la_nofinal_OBJECTS)
#libksycoca_la_OBJECTS = $(libksycoca_la_final_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir) -I$(top_builddir)/dcop -I$(top_builddir)/kdecore -I$(top_builddir)/kio/kssl -I$(top_builddir)/kjs
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libkiocore_la_SOURCES) $(libksycoca_la_SOURCES)
DIST_SOURCES = $(libkiocore_la_SOURCES) $(libksycoca_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(includedir)" \
	"$(DESTDIR)$(kioincludedir)"
HEADERS = $(include_HEADERS) $(kioinclude_HEADERS) $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = ${SHELL} /home/rainman/projects/kdelibs/admin/missing --run aclocal-1.11
ACL_LIBS = -lacl -lattr
ALLOCA = 
AMTAR = $${TAR-tar}
AR = i686-pc-linux-gnu-ar
ARTSCCONFIG = 
AUTOCONF = $(SHELL) $(top_srcdir)/admin/cvs.sh configure || touch configure
AUTODIRS = 
AUTOHEADER = ${SHELL} /home/rainman/projects/kdelibs/admin/missing --run autoheader
AUTOMAKE = ${SHELL} /home/rainman/projects/kdelibs/admin/missing --run automake-1.11
AVAHI_CFLAGS = -D_REENTRANT -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -D_REENTRANT -I/usr/qt/3/include 
AVAHI_LIBS = -lavahi-qt3 -lavahi-common -lavahi-client 
AWK = gawk
CC = i686-pc-linux-gnu-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -std=iso9899:1990 -W -Wall -Wchar-subscripts -Wshadow -Wpointer-arith -Wmissing-prototypes -Wwrite-strings -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -g3 -fno-inline  -O0 -ggdb3 -Wall -Wformat-security -Wmissing-format-attribute
CONF_FILES =  $(top_srcdir)/configure.in.in $(top_srcdir)/./arts/configure.in.in $(top_srcdir)/./dcop/configure.in.in $(top_srcdir)/./dnssd/configure.in.bot $(top_srcdir)/./dnssd/configure.in.in $(top_srcdir)/./kate/part/configure.in.in $(top_srcdir)/./kdecore/configure.in.in $(top_srcdir)/./kdecore/malloc/configure.in.in $(top_srcdir)/./kdefx/configure.in.in $(top_srcdir)/./kdeprint/configure.in.in $(top_srcdir)/./kdeprint/cups/configure.in.in $(top_srcdir)/./kdesu/configure.in.in $(top_srcdir)/./kdoctools/configure.in.in $(top_srcdir)/./khtml/configure.in.in $(top_srcdir)/./khtml/java/configure.in.in $(top_srcdir)/./kimgio/configure.in.in $(top_srcdir)/./kinit/configure.in.in $(top_srcdir)/./kio/kio/configure.in.in $(top_srcdir)/./kio/kssl/configure.in.in $(top_srcdir)/./kio/misc/kpac/configure.in.in $(top_srcdir)/./kioslave/bzip2/configure.in.in $(top_srcdir)/./kioslave/ftp/configure.in.in $(top_srcdir)/./kioslave/http/configure.in.bot $(top_srcdir)/./kioslave/http/configure.in.in $(top_srcdir)/./kjs/configure.in.in $(top_srcdir)/./kspell2/plugins/configure.in.bot $(top_srcdir)/./kspell2/plugins/configure.in.in $(top_srcdir)/./libkmid/configure.in.in $(top_srcdir)/./libkscreensaver/configure.in.in $(top_srcdir)/configure.in.mid $(top_srcdir)/configure.in.bot
CPP = i686-pc-linux-gnu-gcc -E
CPPFLAGS =  -DQT_THREAD_SUPPORT  -D_REENTRANT
CXX = i686-pc-linux-gnu-g++
CXXCPP = i686-pc-linux-gnu-g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wno-long-long -Wundef -ansi -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -Wcast-align -Wchar-subscripts -Wall -W -Wpointer-arith -fno-builtin -g3 -fno-inline -O0 -ggdb3 -Wall -Wformat-security -Wmissing-format-attribute -Wno-non-virtual-dtor -fno-exceptions -fno-check-new -fno-common  -DQT_CLEAN_NAMESPACE -DQT_NO_ASCII_CAST -DQT_NO_STL -DQT_NO_COMPAT -DQT_NO_TRANSLATION
CYGPATH_W = echo
DCOPIDL = $(top_builddir)/dcop/dcopidl/dcopidl
DCOPIDL2CPP = $(top_builddir)/dcop/dcopidl2cpp/dcopidl2cpp
DCOPIDLNG = $(top_srcdir)/dcop/dcopidlng/dcopidlng
DCOP_DEPENDENCIES = $(DCOPIDL) $(DCOPIDLNG)
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN = 
DOXYGEN_PROJECT_NAME = The KDE API Reference
DOXYGEN_PROJECT_NUMBER = Version 3.5.10
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_PERMISSIVE_FLAG = -fpermissive
EXEEXT = 
EXR_FLAGS = 
EXTRA_SUBDIRS = 
FGREP = /bin/grep -F
FRAMEWORK_COREAUDIO = 
GMSGFMT = /usr/bin/gmsgfmt
GREP = /bin/grep
GSSAPI_INCS = 
GSSAPI_LIBS = 
GSSAPI_RPATH = 
HAVE_GCC_VISIBILITY = 0
HAVE_MITSHM = 
HAVE_SENDFILE = 
HELP_SUBDIR = kdoctools
ICE_RLIB = ICE/libkICE.la
ICE_SUBDIR = ICE
INCLTDL = -I${top_srcdir}/libltdl
INSTALL = /usr/bin/install -c -p
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL} $(INSTALL_STRIP_FLAG)
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KCFG_DEPENDENCIES = $(KCONFIG_COMPILER)
KCONFIG_COMPILER = $(top_builddir)/kdecore/kconfig_compiler/kconfig_compiler
KDEINIT_SETUID = 1
KDEINIT_XFT_INCLUDES = -I/usr/include/freetype2 
KDE_CHECK_PLUGIN = $(KDE_PLUGIN) -rpath $(libdir)
KDE_EXTRA_RPATH = 
KDE_FORCE_INLINE = -finline-limit=100000
KDE_HAS_DOXYGEN = no
KDE_HAVE_DOT = YES
KDE_INCLUDES = -I${prefix}/include
KDE_LDFLAGS = -L/usr/kde/git/lib
KDE_MT_LDFLAGS = 
KDE_MT_LIBS = -lpthread
KDE_NO_UNDEFINED = -Wl,--no-undefined -Wl,--allow-shlib-undefined
KDE_PLUGIN = -avoid-version -module -no-undefined $(KDE_NO_UNDEFINED) $(KDE_RPATH) $(KDE_MT_LDFLAGS)
KDE_RPATH = -R $(libdir) -R $(kde_libraries) -R $(qt_libraries) -R $(x_libraries)
KDE_USE_CLOSURE_FALSE = 
KDE_USE_CLOSURE_TRUE = #
KDE_USE_FINAL_FALSE = 
KDE_USE_FINAL_TRUE = #
KDE_USE_FPIE = -fPIE
KDE_USE_NMCHECK_FALSE = 
KDE_USE_NMCHECK_TRUE = #
KDE_USE_PIE = -pie
KDE_XSL_STYLESHEET = $(top_srcdir)/kdoctools/customization/kde-chunk.xsl
KJAVA_POLICYPATH = /usr/kde/git/share/apps/kjava/-
LD = /usr/i686-pc-linux-gnu/bin/ld
LDFLAGS = 
LDFLAGS_AS_NEEDED = 
LDFLAGS_NEW_DTAGS = 
LIBADD_DL = -ldl
LIBART_CFLAGS = -I/usr/include/libart-2.0
LIBART_LIBS = -L/usr/lib -lart_lgpl_2 -lm
LIBART_RPATH = 
LIBASOUND = -lasound
LIBBZ2 = -lbz2
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBDL = -ldl
LIBFAM = -lfam
LIBICE = 
LIBJPEG = -ljpeg
LIBLTDL = ${top_build_prefix}libltdl/libltdlc.la
LIBOBJS = 
LIBPCRE = -lpcreposix -lpcre
LIBPNG = -lpng -lz -lm
LIBPTHREAD = -lpthread
LIBRESOLV = -lresolv
LIBS = 
LIBSM = -lSM -lICE
LIBSOCKET = 
LIBSSL = -lssl -lcrypto
LIBTHAI = 
LIBTIFF = -ltiff -ljpeg -lz
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUCB = 
LIBUTEMPTER = 
LIBUTIL = -lutil
LIBVOLMGT = 
LIBXML_CFLAGS = -I/usr/include/libxml2
LIBXML_LIBS = -lxml2 -lz -lm -ldl
LIBXML_RPATH = 
LIBXSLT_CFLAGS = -I/usr/include/libxml2
LIBXSLT_LIBS = -L/usr/lib -lxslt -lxml2 -lz -ldl -lm -lrt
LIBXSLT_RPATH = 
LIBZ = -lz
LIB_CUPS = -lcups
LIB_EXR = 
LIB_IDN = -lidn
LIB_JASPER = -ljasper -ljpeg -lm
LIB_KAB = $(top_builddir)/kab/libkab.la
LIB_KABC = $(top_builddir)/kabc/libkabc.la
LIB_KDECORE = $(top_builddir)/kdecore/libkdecore.la
LIB_KDED = 
LIB_KDEPIM = -lkdepim
LIB_KDEPRINT = $(top_builddir)/kdeprint/libkdeprint.la
LIB_KDEUI = $(top_builddir)/kdeui/libkdeui.la
LIB_KDNSSD = -lkdnssd
LIB_KFILE = $(top_builddir)/kio/libkio.la
LIB_KFM = 
LIB_KHTML = $(top_builddir)/khtml/libkhtml.la
LIB_KIMGIO = $(top_builddir)/kimgio/libkimgio.la
LIB_KIMPROXY = -lkimproxy
LIB_KIO = $(top_builddir)/kio/libkio.la
LIB_KJS = -lkjs
LIB_KNEWSTUFF = $(top_builddir)/knewstuff/libknewstuff.la
LIB_KPARTS = $(top_builddir)/kparts/libkparts.la
LIB_KSPELL = -lkspell
LIB_KSYCOCA = $(top_builddir)/kio/libkio.la
LIB_KUNITTEST = $(top_builddir)/kunittest/libkunittest.la
LIB_KUTILS = -lkutils
LIB_POLL = 
LIB_QPE = 
LIB_QT = -lqt-mt  $(LIBZ) $(LIBPNG) -lXext $(LIB_X11) $(LIBSM) -lpthread
LIB_SMB = -lsmb
LIB_X11 = -lX11 $(LIBSOCKET)
LIB_XEXT = -lXext
LIB_XRENDER = -lXrender
LIPO = 
LN_S = ln -s
LTDLDEPS = ${top_build_prefix}libltdl/libltdlc.la
LTDLINCL = -I${top_srcdir}/libltdl
LTLIBOBJS = 
LUA = 
LUA_INCLUDES = 
LUA_LIBS = 
MAKEINFO = ${SHELL} /home/rainman/projects/kdelibs/admin/missing --run makeinfo
MAKEKDEWIDGETS = $(top_builddir)/kdewidgets/makekdewidgets
MCOPIDL = 
MD5SUM = /usr/bin/md5sum
MEINPROC = $(top_builddir)/kdoctools/meinproc --srcdir=$(top_srcdir)/kdoctools
MEINPROC_DEP = $(top_builddir)/kdoctools/meinproc
MKDIR_P = /bin/mkdir -p
MOC = /usr/qt/3/bin/moc
MSGFMT = /usr/bin/gmsgfmt
NM = /usr/bin/nm -B
NMEDIT = 
NOOPT_CFLAGS = -O0
NOOPT_CXXFLAGS = -O0
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = kdelibs
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PCRECFLAGS = 
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
QNAMESPACE_H = /usr/qt/3/include/qnamespace.h
QTDOCDIR = NO
QTE_NORTTI = 
QT_INCLUDES = -I/usr/qt/3/include
QT_LDFLAGS = -L/usr/qt/3/lib
RANLIB = i686-pc-linux-gnu-ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SSL_INCLUDES = 
SSL_LDFLAGS = 
STRIP = i686-pc-linux-gnu-strip
TOPSUBDIRS =  dcop libltdl kdefx kdecore kunittest kdeui kdesu kjs kwallet kio kded arts dnssd kab kconf_update kdoctools kimgio kioslave knewstuff kparts kresources kstyles kutils libkmid libkscreensaver licenses mimetypes pics doc kcert kinit kdeprint kabc kspell2 kmdi kcmshell khtml interfaces kdewidgets kate
UIC = /usr/qt/3/bin/uic -nounload
UIC_TR = tr2i18n
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_RTTI = 
USE_THREADS = 
VERSION = 3.5.10
WOVERLOADED_VIRTUAL = -Woverloaded-virtual
XGETTEXT = /usr/bin/xgettext
XMKMF = 
XMLLINT = /usr/bin/xmllint
X_EXTRA_LIBS = 
X_INCLUDES = -I.
X_LDFLAGS = -L/usr/lib32
X_PRE_LIBS = 
X_RPATH = -R $(x_libraries)
abs_builddir = /home/rainman/projects/kdelibs/kio/kio
abs_srcdir = /home/rainman/projects/kdelibs/kio/kio
abs_top_builddir = /home/rainman/projects/kdelibs
abs_top_srcdir = /home/rainman/projects/kdelibs
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
all_includes = -I$(top_srcdir)/dcop -I$(top_srcdir)/libltdl -I$(top_srcdir)/kdefx -I$(top_builddir)/kdecore -I$(top_srcdir)/kdecore -I$(top_srcdir)/kdecore/network -I$(top_srcdir)/kdeui -I$(top_srcdir)/kio -I$(top_srcdir)/kio/kio -I$(top_srcdir)/kio/kfile -I$(top_srcdir) $(QT_INCLUDES) $(X_INCLUDES) $(KDE_INCLUDES) $(USER_INCLUDES)
all_libraries = -L/usr/kde/git/lib -L/usr/qt/3/lib -L/usr/lib32   
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = i686-pc-linux-gnu
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
cups_modeldir = /usr/share/cups/model
datadir = /usr/kde/git/share
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
have_pkg_config = yes
host = i686-pc-linux-gnu
host_alias = i686-pc-linux-gnu
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = /usr/kde/git/share/info
install_sh = ${SHELL} /home/rainman/projects/kdelibs/admin/install-sh
kde_appsdir = ${datadir}/applnk
kde_bindir = ${exec_prefix}/bin
kde_confdir = ${datadir}/config
kde_cups_config = /usr/bin/cups-config
kde_datadir = ${datadir}/apps
kde_htmldir = ${datadir}/doc/HTML
kde_icondir = ${datadir}/icons
kde_includes = ${prefix}/include
kde_kcfgdir = ${datadir}/config.kcfg
kde_libraries = /usr/kde/git/lib
kde_libs_htmldir = $(kde_htmldir)
kde_libs_prefix = $(prefix)
kde_locale = ${datadir}/locale
kde_mimedir = ${datadir}/mimelnk
kde_moduledir = ${libdir}/kde3
kde_qtver = 3
kde_servicesdir = ${datadir}/services
kde_servicetypesdir = ${datadir}/servicetypes
kde_sounddir = ${datadir}/sounds
kde_styledir = ${libdir}/kde3/plugins/styles
kde_templatesdir = ${datadir}/templates
kde_wallpaperdir = ${datadir}/wallpapers
kde_widgetdir = ${libdir}/kde3/plugins/designer
kdeinitdir = $(kde_moduledir)
libdir = /usr/kde/git/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = /var/lib
lt_ECHO = echo
mandir = /usr/kde/git/share/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
path_su = /bin/su
path_sudo = /usr/bin/sudo
pdfdir = ${docdir}
prefix = /usr/kde/git
program_transform_name = s,x,x,
psdir = ${docdir}
qt_includes = /usr/qt/3/include
qt_libraries = /usr/qt/3/lib
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /usr/kde/git/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
x_includes = .
x_libraries = /usr/lib32
xdg_appsdir = ${datadir}/applications/kde
xdg_directorydir = ${datadir}/desktop-directories
xdg_menudir = ${sysconfdir}/xdg/menus
AM_CPPFLAGS = -D_LARGEFILE64_SOURCE
INCLUDES = -I$(top_srcdir) -I$(srcdir)/.. -I$(top_srcdir)/kdecore/network -I$(srcdir)/../kssl -I../kssl -I$(srcdir)/../../interfaces  $(all_includes) $(SSL_INCLUDES)
noinst_LTLIBRARIES = libkiocore.la libksycoca.la

# convenience lib - no LDFLAGS or LIBADD !
#if USE_POSIX_ACL
libksycoca_la_SOURCES = kdirwatch.cpp kfileshare.cpp ksambashare.cpp \
	knfsshare.cpp ktrader.cpp ktraderparse.cpp \
	ktraderparsetree.cpp kservicetypefactory.cpp kservicetype.cpp \
	kmimetype.cpp kservicegroup.cpp kservice.cpp \
	kservicefactory.cpp kuserprofile.cpp kservicegroupfactory.cpp \
	kurifilter.cpp kfilterbase.cpp kfilterdev.cpp \
	kshellcompletion.cpp kurlcompletion.cpp kautomount.cpp \
	krun.cpp kfileitem.cpp kdirlister.cpp kimageio.cpp yacc.c \
	lex.c chmodjob.cpp kscan.cpp kar.cpp ktar.cpp kzip.cpp \
	previewjob.cpp metainfojob.cpp davjob.cpp kdatatool.cpp \
	karchive.cpp kfilefilter.cpp kfilemetainfo.cpp \
	kdcopservicestarter.cpp dataslave.cpp dataprotocol.cpp \
	kacl.cpp posixacladdons.cpp
#endif
#if USE_POSIX_ACL
include_HEADERS = kservicetype.h kmimetype.h kmimemagic.h kservice.h \
	krun.h kdirwatch.h kautomount.h kuserprofile.h kshred.h kar.h \
	ktar.h kzip.h ktrader.h kurifilter.h kurlcompletion.h \
	kshellcompletion.h kfileitem.h kfileshare.h ksambashare.h \
	knfsshare.h kdirlister.h kservicegroup.h kimageio.h \
	kdirnotify.h kdirnotify_stub.h kurlpixmapprovider.h \
	kprotocolinfo.h kprotocolmanager.h kfilterbase.h kfilterdev.h \
	kemailsettings.h kscan.h kdatatool.h karchive.h kfilefilter.h \
	kfilemetainfo.h renamedlgplugin.h kmimetyperesolver.h \
	kdcopservicestarter.h kremoteencoding.h kmimetypechooser.h \
	kacl.h
#endif

#libkiocore_la_LDFLAGS = $(all_libraries)
#libkiocore_la_LIBADD = ../../kdeui/libkdeui.la ../../kdesu/libkdesu.la $(LIBZ) $(LIBFAM) $(LIBVOLMGT)
#>- libkiocore_la_SOURCES = authinfo.cpp \
#>- 	kshred.cpp \
#>- 	kprotocolmanager.cpp \
#>- 	slave.cpp slaveinterface.cpp observer.stub \
#>- 	sessiondata.cpp	scheduler.cpp \
#>- 	connection.cpp \
#>- 	job.cpp global.cpp \
#>- 	slaveconfig.cpp kurlpixmapprovider.cpp \
#>- 	netaccess.cpp paste.cpp pastedialog.cpp \
#>- 	kmimemagic.cpp \
#>- 	tcpslavebase.cpp slavebase.cpp passdlg.cpp \
#>- 	forwardingslavebase.cpp \
#>- 	progressbase.cpp defaultprogress.cpp \
#>- 	statusbarprogress.cpp \
#>- 	kdirnotify.cpp kdirnotify.skel kdirnotify_stub.cpp \
#>- 	observer.cpp uiserver.stub observer.skel \
#>- 	kemailsettings.cpp  \
#>- 	kprotocolinfo.cpp \
#>- 	renamedlg.cpp skipdlg.cpp kremoteencoding.cpp \
#>- 	kmimetypechooser.cpp
#>+ 20
libkiocore_la_SOURCES=authinfo.cpp \
	kshred.cpp \
	kprotocolmanager.cpp \
	slave.cpp slaveinterface.cpp  \
	sessiondata.cpp	scheduler.cpp \
	connection.cpp \
	job.cpp global.cpp \
	slaveconfig.cpp kurlpixmapprovider.cpp \
	netaccess.cpp paste.cpp pastedialog.cpp \
	kmimemagic.cpp \
	tcpslavebase.cpp slavebase.cpp passdlg.cpp \
	forwardingslavebase.cpp \
	progressbase.cpp defaultprogress.cpp \
	statusbarprogress.cpp \
	kdirnotify.cpp  kdirnotify_stub.cpp \
	observer.cpp   \
	kemailsettings.cpp  \
	kprotocolinfo.cpp \
	renamedlg.cpp skipdlg.cpp kremoteencoding.cpp \
	kmimetypechooser.cpp observer_stub.cpp kdirnotify_skel.cpp uiserver_stub.cpp observer_skel.cpp

uiserver_DIR = $(top_srcdir)/kio/misc
#>- METASOURCES = AUTO
kioincludedir = $(includedir)/kio
kioinclude_HEADERS = connection.h \
        slaveinterface.h slave.h slaveconfig.h \
        sessiondata.h global.h passdlg.h \
	netaccess.h job.h scheduler.h \
        jobclasses.h paste.h slavebase.h \
	progressbase.h defaultprogress.h \
	statusbarprogress.h tcpslavebase.h \
	forwardingslavebase.h \
	observer.h chmodjob.h uiserver_stub.h \
        kmdbase.h authinfo.h \
	ioslave_defaults.h http_slave_defaults.h previewjob.h thumbcreator.h \
	metainfojob.h davjob.h renamedlg.h skipdlg.h


# Internal
#if USE_POSIX_ACL
noinst_HEADERS = kservicetypefactory.h kservicefactory.h \
	kmessageboxwrapper.h ktraderparse.h ktraderparsetree.h yacc.h \
	kimageiofactory.h kdirwatch_p.h kdirlister_p.h renamedlg.h \
	skipdlg.h dataslave.h dataprotocol.h kservice_p.h \
	posixacladdons.h
#endif
parserfiles = yacc.y lex.l
EXTRA_DIST = $(parserfiles)
#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/../../admin/Doxyfile.am $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
#>- 	        && { if test -f $@; then exit 0; else break; fi; }; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu kio/kio/Makefile'; \
#>- 	$(am__cd) $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu kio/kio/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu kio/kio/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu kio/kio/Makefile
	cd $(top_srcdir) && perl admin/am_edit kio/kio/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/../../admin/Doxyfile.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libkiocore.la: $(libkiocore_la_OBJECTS) $(libkiocore_la_DEPENDENCIES) $(EXTRA_libkiocore_la_DEPENDENCIES) 
	$(CXXLINK)  $(libkiocore_la_OBJECTS) $(libkiocore_la_LIBADD) $(LIBS)
libksycoca.la: $(libksycoca_la_OBJECTS) $(libksycoca_la_DEPENDENCIES) $(EXTRA_libksycoca_la_DEPENDENCIES) 
	$(CXXLINK)  $(libksycoca_la_OBJECTS) $(libksycoca_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/authinfo.Plo
include ./$(DEPDIR)/chmodjob.Plo
include ./$(DEPDIR)/connection.Plo
include ./$(DEPDIR)/dataprotocol.Plo
include ./$(DEPDIR)/dataslave.Plo
include ./$(DEPDIR)/davjob.Plo
include ./$(DEPDIR)/defaultprogress.Plo
include ./$(DEPDIR)/forwardingslavebase.Plo
include ./$(DEPDIR)/global.Plo
include ./$(DEPDIR)/job.Plo
include ./$(DEPDIR)/kacl.Plo
include ./$(DEPDIR)/kar.Plo
include ./$(DEPDIR)/karchive.Plo
include ./$(DEPDIR)/kautomount.Plo
include ./$(DEPDIR)/kdatatool.Plo
include ./$(DEPDIR)/kdcopservicestarter.Plo
include ./$(DEPDIR)/kdirlister.Plo
include ./$(DEPDIR)/kdirnotify.Plo
include ./$(DEPDIR)/kdirnotify_stub.Plo
include ./$(DEPDIR)/kdirwatch.Plo
include ./$(DEPDIR)/kemailsettings.Plo
include ./$(DEPDIR)/kfilefilter.Plo
include ./$(DEPDIR)/kfileitem.Plo
include ./$(DEPDIR)/kfilemetainfo.Plo
include ./$(DEPDIR)/kfileshare.Plo
include ./$(DEPDIR)/kfilterbase.Plo
include ./$(DEPDIR)/kfilterdev.Plo
include ./$(DEPDIR)/kimageio.Plo
include ./$(DEPDIR)/kmimemagic.Plo
include ./$(DEPDIR)/kmimetype.Plo
include ./$(DEPDIR)/kmimetypechooser.Plo
include ./$(DEPDIR)/knfsshare.Plo
include ./$(DEPDIR)/kprotocolinfo.Plo
include ./$(DEPDIR)/kprotocolmanager.Plo
include ./$(DEPDIR)/kremoteencoding.Plo
include ./$(DEPDIR)/krun.Plo
include ./$(DEPDIR)/ksambashare.Plo
include ./$(DEPDIR)/kscan.Plo
include ./$(DEPDIR)/kservice.Plo
include ./$(DEPDIR)/kservicefactory.Plo
include ./$(DEPDIR)/kservicegroup.Plo
include ./$(DEPDIR)/kservicegroupfactory.Plo
include ./$(DEPDIR)/kservicetype.Plo
include ./$(DEPDIR)/kservicetypefactory.Plo
include ./$(DEPDIR)/kshellcompletion.Plo
include ./$(DEPDIR)/kshred.Plo
include ./$(DEPDIR)/ktar.Plo
include ./$(DEPDIR)/ktrader.Plo
include ./$(DEPDIR)/ktraderparse.Plo
include ./$(DEPDIR)/ktraderparsetree.Plo
include ./$(DEPDIR)/kurifilter.Plo
include ./$(DEPDIR)/kurlcompletion.Plo
include ./$(DEPDIR)/kurlpixmapprovider.Plo
include ./$(DEPDIR)/kuserprofile.Plo
include ./$(DEPDIR)/kzip.Plo
include ./$(DEPDIR)/lex.Plo
include ./$(DEPDIR)/metainfojob.Plo
include ./$(DEPDIR)/netaccess.Plo
include ./$(DEPDIR)/observer.Plo
include ./$(DEPDIR)/passdlg.Plo
include ./$(DEPDIR)/paste.Plo
include ./$(DEPDIR)/pastedialog.Plo
include ./$(DEPDIR)/posixacladdons.Plo
include ./$(DEPDIR)/previewjob.Plo
include ./$(DEPDIR)/progressbase.Plo
include ./$(DEPDIR)/renamedlg.Plo
include ./$(DEPDIR)/scheduler.Plo
include ./$(DEPDIR)/sessiondata.Plo
include ./$(DEPDIR)/skipdlg.Plo
include ./$(DEPDIR)/slave.Plo
include ./$(DEPDIR)/slavebase.Plo
include ./$(DEPDIR)/slaveconfig.Plo
include ./$(DEPDIR)/slaveinterface.Plo
include ./$(DEPDIR)/statusbarprogress.Plo
include ./$(DEPDIR)/tcpslavebase.Plo
include ./$(DEPDIR)/yacc.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)
install-kioincludeHEADERS: $(kioinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(kioinclude_HEADERS)'; test -n "$(kioincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(kioincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(kioincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(kioincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(kioincludedir)" || exit $$?; \
	done

uninstall-kioincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(kioinclude_HEADERS)'; test -n "$(kioincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(kioincludedir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(includedir)" "$(DESTDIR)$(kioincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-idl clean-bcheck clean-final  clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data-local install-includeHEADERS \
	install-kioincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-kioincludeHEADERS \
	uninstall-local

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am \
	install-data-local install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-kioincludeHEADERS install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-includeHEADERS \
	uninstall-kioincludeHEADERS uninstall-local


parser: $(parserfiles)
	cd $(srcdir) ;\
	flex -olex.c -Pkiotrader lex.l ;\
	bison -d -p kiotrader yacc.y && mv yacc.tab.c yacc.c; mv yacc.tab.h yacc.h

.PHONY: parser
apidox-am-yes:
	@if test \! -d "$(top_srcdir)/doc/common/" && test -z "$$DOXDATA" ; then \
		export DOXDATA=$(kde_libs_htmldir)/en/common ; \
	fi ; \
	abs_top_srcdir=`cd $(top_srcdir) && pwd` ;\
	test -d $(top_builddir)/apidocs || \
		( cd $(top_builddir) && sh $$abs_top_srcdir/admin/doxygen.sh \
		--no-modulename --installdir=$(kde_libs_htmldir)/en \
		--no-recurse $(abs_top_srcdir) . ) ; \
	cd $(top_builddir) && sh $$abs_top_srcdir/admin/doxygen.sh \
		--recurse --no-modulename --installdir=$(kde_libs_htmldir)/en \
		$$abs_top_srcdir $(subdir)

apidox-am-toplevel-yes:
	@if test \! -d "$(top_srcdir)/doc/common/" && test -z "$$ADMIN" ; then \
		export DOXDATA=$(kde_libs_htmldir)/en/common ; \
	fi ; \
	abs_top_srcdir=`cd $(top_srcdir) && pwd` ;\
	cd $(top_builddir) && sh $$abs_top_srcdir/admin/doxygen.sh \
		--no-modulename --installdir=$(kde_libs_htmldir)/en \
		$$abs_top_srcdir

apidox-am-no:

apidox-am-toplevel-no:

apidox:
	@if test "$(subdir)" != "."; then \
		$(MAKE) apidox-am-no ;\
	else \
		$(MAKE) apidox-am-toplevel-no ;\
	fi

install-data-local: install-apidox

install-apidox:
	@if test "$(subdir)" != "."; then \
		$(mkinstalldirs) $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir)/html ; \
		if test -f $(top_builddir)/apidocs/$(subdir)/$(subdir).tag; then \
		echo $(INSTALL_DATA) $(top_builddir)/apidocs/$(subdir)/$(subdir).tag $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); \
		$(INSTALL_DATA) $(top_builddir)/apidocs/$(subdir)/$(subdir).tag $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); \
		fi; \
		if test -d $(top_builddir)/apidocs/$(subdir)/html; then \
			list=`ls $(top_builddir)/apidocs/$(subdir)/html`; \
			echo "installing $(top_builddir)/apidocs/$(subdir)/html" ;\
			for file in $$list; do \
				$(INSTALL_DATA) $(top_builddir)/apidocs/$(subdir)/html/$$file $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir)/html; \
		done; \
		fi; \
	else\
		if test -d $(top_builddir)/apidocs; then \
		$(mkinstalldirs) $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs ;\
		list=`cd $(top_builddir)/apidocs && ls -1`; \
		echo "installing $(top_builddir)/apidocs/$$file" ;\
		echo "target directory $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs" ; \
		for file in $$list; do \
			if test -f $(top_builddir)/apidocs/$$file; then \
				$(INSTALL_DATA) $(top_builddir)/apidocs/$$file $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs; \
			fi; \
		done ; fi; \
	fi

uninstall-local: uninstall-apidox

uninstall-apidox:
	@if test "$(subdir)" != "."; then \
		if test -d $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); then \
			rm -rf $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); \
		fi \
	else \
		if test -d $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs; then \
			rm -rf $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs; \
		fi \
	fi

install-apidox-recurse: install-apidox
	@set fnord $(MAKEFLAGS); amf=$$2; if test -n '$(SUBDIRS)'; then \
	    list='$(SUBDIRS)'; \
	    for subdir in $$list; do \
		if grep '^include .*Doxyfile.am' $(srcdir)/$$subdir/Makefile.am > /dev/null ; then \
		echo "Installing apidox from $$subdir"; \
		if test "$$subdir" != "."; then \
			(cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) GENERATE_FLAG=no install-apidox-recurse) || exit 1; \
		fi ; fi ;\
	    done; \
	fi

.PHONY: apidox-am-yes apidox-am-no install-data-local install-apidox install-apidox uninstall-local uninstall-apidox uninstall-apidox apidox apidox-am-toplevel-no apidox-am-toplevel-yes

# Local Variables:
# mode: makefile
# End:

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 15
observer.kidl: $(srcdir)/observer.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(srcdir)/observer.h > observer.kidl || ( rm -f observer.kidl ; false )
observer_stub.h: observer.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-skel observer.kidl
kdirnotify.kidl: $(srcdir)/kdirnotify.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(srcdir)/kdirnotify.h > kdirnotify.kidl || ( rm -f kdirnotify.kidl ; false )
kdirnotify_skel.cpp: kdirnotify.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-stub kdirnotify.kidl
uiserver.kidl: $(top_srcdir)/kio/misc/uiserver.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(top_srcdir)/kio/misc/uiserver.h > uiserver.kidl || ( rm -f uiserver.kidl ; false )
uiserver_stub.h: uiserver.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-skel uiserver.kidl
observer_skel.cpp: observer.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-stub observer.kidl

#>+ 3
kdatatool.moc: $(srcdir)/kdatatool.h
	$(MOC) $(srcdir)/kdatatool.h -o kdatatool.moc

#>+ 2
mocs: kdatatool.moc

#>+ 3
previewjob.moc: $(srcdir)/previewjob.h
	$(MOC) $(srcdir)/previewjob.h -o previewjob.moc

#>+ 2
mocs: previewjob.moc

#>+ 3
kdirwatch_p.moc: $(srcdir)/kdirwatch_p.h
	$(MOC) $(srcdir)/kdirwatch_p.h -o kdirwatch_p.moc

#>+ 2
mocs: kdirwatch_p.moc

#>+ 3
jobclasses.moc: $(srcdir)/jobclasses.h
	$(MOC) $(srcdir)/jobclasses.h -o jobclasses.moc

#>+ 2
mocs: jobclasses.moc

#>+ 3
ktrader.moc: $(srcdir)/ktrader.h
	$(MOC) $(srcdir)/ktrader.h -o ktrader.moc

#>+ 2
mocs: ktrader.moc

#>+ 3
kmimetyperesolver.moc: $(srcdir)/kmimetyperesolver.h
	$(MOC) $(srcdir)/kmimetyperesolver.h -o kmimetyperesolver.moc

#>+ 2
mocs: kmimetyperesolver.moc

#>+ 3
slave.moc: $(srcdir)/slave.h
	$(MOC) $(srcdir)/slave.h -o slave.moc

#>+ 2
mocs: slave.moc

#>+ 3
skipdlg.moc: $(srcdir)/skipdlg.h
	$(MOC) $(srcdir)/skipdlg.h -o skipdlg.moc

#>+ 2
mocs: skipdlg.moc

#>+ 3
kshred.moc: $(srcdir)/kshred.h
	$(MOC) $(srcdir)/kshred.h -o kshred.moc

#>+ 2
mocs: kshred.moc

#>+ 3
kurifilter.moc: $(srcdir)/kurifilter.h
	$(MOC) $(srcdir)/kurifilter.h -o kurifilter.moc

#>+ 2
mocs: kurifilter.moc

#>+ 3
statusbarprogress.moc: $(srcdir)/statusbarprogress.h
	$(MOC) $(srcdir)/statusbarprogress.h -o statusbarprogress.moc

#>+ 2
mocs: statusbarprogress.moc

#>+ 3
defaultprogress.moc: $(srcdir)/defaultprogress.h
	$(MOC) $(srcdir)/defaultprogress.h -o defaultprogress.moc

#>+ 2
mocs: defaultprogress.moc

#>+ 3
davjob.moc: $(srcdir)/davjob.h
	$(MOC) $(srcdir)/davjob.h -o davjob.moc

#>+ 2
mocs: davjob.moc

#>+ 3
progressbase.moc: $(srcdir)/progressbase.h
	$(MOC) $(srcdir)/progressbase.h -o progressbase.moc

#>+ 2
mocs: progressbase.moc

#>+ 3
kfileshare.moc: $(srcdir)/kfileshare.h
	$(MOC) $(srcdir)/kfileshare.h -o kfileshare.moc

#>+ 2
mocs: kfileshare.moc

#>+ 3
kautomount.moc: $(srcdir)/kautomount.h
	$(MOC) $(srcdir)/kautomount.h -o kautomount.moc

#>+ 2
mocs: kautomount.moc

#>+ 3
forwardingslavebase.moc: $(srcdir)/forwardingslavebase.h
	$(MOC) $(srcdir)/forwardingslavebase.h -o forwardingslavebase.moc

#>+ 2
mocs: forwardingslavebase.moc

#>+ 3
kshellcompletion.moc: $(srcdir)/kshellcompletion.h
	$(MOC) $(srcdir)/kshellcompletion.h -o kshellcompletion.moc

#>+ 2
mocs: kshellcompletion.moc

#>+ 3
scheduler.moc: $(srcdir)/scheduler.h
	$(MOC) $(srcdir)/scheduler.h -o scheduler.moc

#>+ 2
mocs: scheduler.moc

#>+ 3
metainfojob.moc: $(srcdir)/metainfojob.h
	$(MOC) $(srcdir)/metainfojob.h -o metainfojob.moc

#>+ 2
mocs: metainfojob.moc

#>+ 3
connection.moc: $(srcdir)/connection.h
	$(MOC) $(srcdir)/connection.h -o connection.moc

#>+ 2
mocs: connection.moc

#>+ 3
chmodjob.moc: $(srcdir)/chmodjob.h
	$(MOC) $(srcdir)/chmodjob.h -o chmodjob.moc

#>+ 2
mocs: chmodjob.moc

#>+ 3
dataslave.moc: $(srcdir)/dataslave.h
	$(MOC) $(srcdir)/dataslave.h -o dataslave.moc

#>+ 2
mocs: dataslave.moc

#>+ 3
kdirlister.moc: $(srcdir)/kdirlister.h
	$(MOC) $(srcdir)/kdirlister.h -o kdirlister.moc

#>+ 2
mocs: kdirlister.moc

#>+ 3
observer.moc: $(srcdir)/observer.h
	$(MOC) $(srcdir)/observer.h -o observer.moc

#>+ 2
mocs: observer.moc

#>+ 3
kfilemetainfo.moc: $(srcdir)/kfilemetainfo.h
	$(MOC) $(srcdir)/kfilemetainfo.h -o kfilemetainfo.moc

#>+ 2
mocs: kfilemetainfo.moc

#>+ 3
slaveconfig.moc: $(srcdir)/slaveconfig.h
	$(MOC) $(srcdir)/slaveconfig.h -o slaveconfig.moc

#>+ 2
mocs: slaveconfig.moc

#>+ 3
kfilterbase.moc: $(srcdir)/kfilterbase.h
	$(MOC) $(srcdir)/kfilterbase.h -o kfilterbase.moc

#>+ 2
mocs: kfilterbase.moc

#>+ 3
krun.moc: $(srcdir)/krun.h
	$(MOC) $(srcdir)/krun.h -o krun.moc

#>+ 2
mocs: krun.moc

#>+ 3
kurlcompletion.moc: $(srcdir)/kurlcompletion.h
	$(MOC) $(srcdir)/kurlcompletion.h -o kurlcompletion.moc

#>+ 2
mocs: kurlcompletion.moc

#>+ 3
kdirlister_p.moc: $(srcdir)/kdirlister_p.h
	$(MOC) $(srcdir)/kdirlister_p.h -o kdirlister_p.moc

#>+ 2
mocs: kdirlister_p.moc

#>+ 3
netaccess.moc: $(srcdir)/netaccess.h
	$(MOC) $(srcdir)/netaccess.h -o netaccess.moc

#>+ 2
mocs: netaccess.moc

#>+ 3
knfsshare.moc: $(srcdir)/knfsshare.h
	$(MOC) $(srcdir)/knfsshare.h -o knfsshare.moc

#>+ 2
mocs: knfsshare.moc

#>+ 3
kdirwatch.moc: $(srcdir)/kdirwatch.h
	$(MOC) $(srcdir)/kdirwatch.h -o kdirwatch.moc

#>+ 2
mocs: kdirwatch.moc

#>+ 3
sessiondata.moc: $(srcdir)/sessiondata.h
	$(MOC) $(srcdir)/sessiondata.h -o sessiondata.moc

#>+ 2
mocs: sessiondata.moc

#>+ 3
kservice_p.moc: $(srcdir)/kservice_p.h
	$(MOC) $(srcdir)/kservice_p.h -o kservice_p.moc

#>+ 2
mocs: kservice_p.moc

#>+ 3
ksambashare.moc: $(srcdir)/ksambashare.h
	$(MOC) $(srcdir)/ksambashare.h -o ksambashare.moc

#>+ 2
mocs: ksambashare.moc

#>+ 3
passdlg.moc: $(srcdir)/passdlg.h
	$(MOC) $(srcdir)/passdlg.h -o passdlg.moc

#>+ 2
mocs: passdlg.moc

#>+ 3
renamedlg.moc: $(srcdir)/renamedlg.h
	$(MOC) $(srcdir)/renamedlg.h -o renamedlg.moc

#>+ 2
mocs: renamedlg.moc

#>+ 3
kmimetypechooser.moc: $(srcdir)/kmimetypechooser.h
	$(MOC) $(srcdir)/kmimetypechooser.h -o kmimetypechooser.moc

#>+ 2
mocs: kmimetypechooser.moc

#>+ 3
slaveinterface.moc: $(srcdir)/slaveinterface.h
	$(MOC) $(srcdir)/slaveinterface.h -o slaveinterface.moc

#>+ 2
mocs: slaveinterface.moc

#>+ 3
kscan.moc: $(srcdir)/kscan.h
	$(MOC) $(srcdir)/kscan.h -o kscan.moc

#>+ 2
mocs: kscan.moc

#>+ 3
pastedialog.moc: $(srcdir)/pastedialog.h
	$(MOC) $(srcdir)/pastedialog.h -o pastedialog.moc

#>+ 2
mocs: pastedialog.moc

#>+ 3
clean-metasources:
	-rm -f  kdatatool.moc previewjob.moc kdirwatch_p.moc jobclasses.moc ktrader.moc kmimetyperesolver.moc slave.moc skipdlg.moc kshred.moc kurifilter.moc statusbarprogress.moc defaultprogress.moc davjob.moc progressbase.moc kfileshare.moc kautomount.moc forwardingslavebase.moc kshellcompletion.moc scheduler.moc metainfojob.moc connection.moc chmodjob.moc dataslave.moc kdirlister.moc observer.moc kfilemetainfo.moc slaveconfig.moc kfilterbase.moc krun.moc kurlcompletion.moc kdirlister_p.moc netaccess.moc knfsshare.moc kdirwatch.moc sessiondata.moc kservice_p.moc ksambashare.moc passdlg.moc renamedlg.moc kmimetypechooser.moc slaveinterface.moc kscan.moc pastedialog.moc

#>+ 2
KDE_DIST=lex.l Makefile.in observer_stub.h observer.kidl configure.in.in klimitediodevice.h KFILEMETAINFO_ISSUES pastedialog.h uiserver.kidl yacc.y kdirnotify.kidl Makefile.am kservicegroupfactory.h 

#>+ 7
clean-idl:
	-rm -f \
	observer_stub.cpp observer_stub.h observer.kidl \
	kdirnotify_skel.cpp kdirnotify_skel.h kdirnotify.kidl \
	uiserver_stub.cpp uiserver_stub.h uiserver.kidl \
	observer_skel.cpp observer_skel.h observer.kidl 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu kio/kio/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu kio/kio/Makefile
	cd $(top_srcdir) && perl admin/am_edit kio/kio/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in $(include_HEADERS) $(kioinclude_HEADERS) ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
libkiocore_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/authinfo.cpp $(srcdir)/kshred.cpp $(srcdir)/kprotocolmanager.cpp $(srcdir)/slave.cpp $(srcdir)/slaveinterface.cpp $(srcdir)/sessiondata.cpp $(srcdir)/scheduler.cpp $(srcdir)/connection.cpp $(srcdir)/job.cpp $(srcdir)/global.cpp $(srcdir)/slaveconfig.cpp $(srcdir)/kurlpixmapprovider.cpp $(srcdir)/netaccess.cpp $(srcdir)/paste.cpp $(srcdir)/pastedialog.cpp $(srcdir)/kmimemagic.cpp $(srcdir)/tcpslavebase.cpp $(srcdir)/slavebase.cpp $(srcdir)/passdlg.cpp $(srcdir)/forwardingslavebase.cpp $(srcdir)/progressbase.cpp $(srcdir)/defaultprogress.cpp $(srcdir)/statusbarprogress.cpp $(srcdir)/kdirnotify.cpp $(srcdir)/kdirnotify_stub.cpp $(srcdir)/observer.cpp $(srcdir)/kemailsettings.cpp $(srcdir)/kprotocolinfo.cpp $(srcdir)/renamedlg.cpp $(srcdir)/skipdlg.cpp $(srcdir)/kremoteencoding.cpp $(srcdir)/kmimetypechooser.cpp $(srcdir)/observer_stub.cpp $(srcdir)/kdirnotify_skel.cpp $(srcdir)/uiserver_stub.cpp $(srcdir)/observer_skel.cpp  jobclasses.moc slave.moc kshred.moc skipdlg.moc statusbarprogress.moc defaultprogress.moc progressbase.moc forwardingslavebase.moc scheduler.moc connection.moc observer.moc slaveconfig.moc netaccess.moc sessiondata.moc passdlg.moc renamedlg.moc slaveinterface.moc kmimetypechooser.moc pastedialog.moc
	@echo 'creating libkiocore_la.all_cpp.cpp ...'; \
	rm -f libkiocore_la.all_cpp.files libkiocore_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libkiocore_la.all_cpp.final; \
	for file in authinfo.cpp kshred.cpp kprotocolmanager.cpp slave.cpp slaveinterface.cpp sessiondata.cpp scheduler.cpp connection.cpp job.cpp global.cpp slaveconfig.cpp kurlpixmapprovider.cpp netaccess.cpp paste.cpp pastedialog.cpp kmimemagic.cpp tcpslavebase.cpp slavebase.cpp passdlg.cpp forwardingslavebase.cpp progressbase.cpp defaultprogress.cpp statusbarprogress.cpp kdirnotify.cpp kdirnotify_stub.cpp observer.cpp kemailsettings.cpp kprotocolinfo.cpp renamedlg.cpp skipdlg.cpp kremoteencoding.cpp kmimetypechooser.cpp observer_stub.cpp kdirnotify_skel.cpp uiserver_stub.cpp observer_skel.cpp ; do \
	  echo "#include \"$$file\"" >> libkiocore_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libkiocore_la.all_cpp.final; \
	done; \
	cat libkiocore_la.all_cpp.final libkiocore_la.all_cpp.files > libkiocore_la.all_cpp.cpp; \
	rm -f libkiocore_la.all_cpp.final libkiocore_la.all_cpp.files

#>+ 11
libksycoca_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/kdirwatch.cpp $(srcdir)/kfileshare.cpp $(srcdir)/ksambashare.cpp $(srcdir)/knfsshare.cpp $(srcdir)/ktrader.cpp $(srcdir)/ktraderparse.cpp $(srcdir)/ktraderparsetree.cpp $(srcdir)/kservicetypefactory.cpp $(srcdir)/kservicetype.cpp $(srcdir)/kmimetype.cpp $(srcdir)/kservicegroup.cpp $(srcdir)/kservice.cpp $(srcdir)/kservicefactory.cpp $(srcdir)/kuserprofile.cpp $(srcdir)/kservicegroupfactory.cpp $(srcdir)/kurifilter.cpp $(srcdir)/kfilterbase.cpp $(srcdir)/kfilterdev.cpp $(srcdir)/kshellcompletion.cpp $(srcdir)/kurlcompletion.cpp $(srcdir)/kautomount.cpp $(srcdir)/krun.cpp $(srcdir)/kfileitem.cpp $(srcdir)/kdirlister.cpp $(srcdir)/kimageio.cpp $(srcdir)/chmodjob.cpp $(srcdir)/kscan.cpp $(srcdir)/kar.cpp $(srcdir)/ktar.cpp $(srcdir)/kzip.cpp $(srcdir)/previewjob.cpp $(srcdir)/metainfojob.cpp $(srcdir)/davjob.cpp $(srcdir)/kdatatool.cpp $(srcdir)/karchive.cpp $(srcdir)/kfilefilter.cpp $(srcdir)/kfilemetainfo.cpp $(srcdir)/kdcopservicestarter.cpp $(srcdir)/dataslave.cpp $(srcdir)/dataprotocol.cpp $(srcdir)/kacl.cpp $(srcdir)/posixacladdons.cpp  kdatatool.moc previewjob.moc kdirwatch_p.moc ktrader.moc kmimetyperesolver.moc kurifilter.moc davjob.moc kfileshare.moc kautomount.moc metainfojob.moc kshellcompletion.moc chmodjob.moc dataslave.moc kdirlister.moc kfilemetainfo.moc kfilterbase.moc krun.moc kurlcompletion.moc knfsshare.moc kdirlister_p.moc kdirwatch.moc ksambashare.moc kservice_p.moc kscan.moc
	@echo 'creating libksycoca_la.all_cpp.cpp ...'; \
	rm -f libksycoca_la.all_cpp.files libksycoca_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libksycoca_la.all_cpp.final; \
	for file in kdirwatch.cpp kfileshare.cpp ksambashare.cpp knfsshare.cpp ktrader.cpp ktraderparse.cpp ktraderparsetree.cpp kservicetypefactory.cpp kservicetype.cpp kmimetype.cpp kservicegroup.cpp kservice.cpp kservicefactory.cpp kuserprofile.cpp kservicegroupfactory.cpp kurifilter.cpp kfilterbase.cpp kfilterdev.cpp kshellcompletion.cpp kurlcompletion.cpp kautomount.cpp krun.cpp kfileitem.cpp kdirlister.cpp kimageio.cpp chmodjob.cpp kscan.cpp kar.cpp ktar.cpp kzip.cpp previewjob.cpp metainfojob.cpp davjob.cpp kdatatool.cpp karchive.cpp kfilefilter.cpp kfilemetainfo.cpp kdcopservicestarter.cpp dataslave.cpp dataprotocol.cpp kacl.cpp posixacladdons.cpp ; do \
	  echo "#include \"$$file\"" >> libksycoca_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libksycoca_la.all_cpp.final; \
	done; \
	cat libksycoca_la.all_cpp.final libksycoca_la.all_cpp.files > libksycoca_la.all_cpp.cpp; \
	rm -f libksycoca_la.all_cpp.final libksycoca_la.all_cpp.files

#>+ 3
clean-final:
	-rm -f libkiocore_la.all_cpp.cpp libksycoca_la.all_cpp.cpp

#>+ 3
final:
	$(MAKE) libkiocore_la_OBJECTS="$(libkiocore_la_final_OBJECTS)" libksycoca_la_OBJECTS="$(libksycoca_la_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) libkiocore_la_OBJECTS="$(libkiocore_la_final_OBJECTS)" libksycoca_la_OBJECTS="$(libksycoca_la_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) libkiocore_la_OBJECTS="$(libkiocore_la_nofinal_OBJECTS)" libksycoca_la_OBJECTS="$(libksycoca_la_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) libkiocore_la_OBJECTS="$(libkiocore_la_nofinal_OBJECTS)" libksycoca_la_OBJECTS="$(libksycoca_la_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 119
kmimetypechooser.o: kmimetypechooser.moc 
netaccess.o: netaccess.moc 
slaveinterface.lo: slaveinterface.moc 
kscan.lo: kscan.moc 
$(srcdir)/pastedialog.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/kmimemagic.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/sessiondata.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/authinfo.cpp: observer_stub.h uiserver_stub.h 
sessiondata.lo: sessiondata.moc 
observer.o: observer.moc 
kautomount.o: kautomount.moc 
pastedialog.lo: pastedialog.moc 
$(srcdir)/slave.cpp: observer_stub.h uiserver_stub.h 
kdatatool.o: kdatatool.moc 
nmcheck-am: nmcheck
davjob.lo: davjob.moc 
kmimetype.lo: kmimetyperesolver.moc 
kfilterbase.o: kfilterbase.moc 
scheduler.o: scheduler.moc 
$(srcdir)/kemailsettings.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/kdirnotify_stub.cpp: observer_stub.h uiserver_stub.h 
kdirwatch.lo: kdirwatch_p.moc kdirwatch.moc 
netaccess.lo: netaccess.moc 
kmimetype.o: kmimetyperesolver.moc 
pastedialog.o: pastedialog.moc 
passdlg.o: passdlg.moc 
kdatatool.lo: kdatatool.moc 
kfilemetainfo.o: kfilemetainfo.moc 
$(srcdir)/slavebase.cpp: observer_stub.h uiserver_stub.h 
kshellcompletion.lo: kshellcompletion.moc 
krun.o: krun.moc 
kfilterbase.lo: kfilterbase.moc 
slaveconfig.lo: slaveconfig.moc 
skipdlg.o: skipdlg.moc 
$(srcdir)/connection.cpp: observer_stub.h uiserver_stub.h 
observer_stub.cpp: observer_stub.h 
$(srcdir)/kurlpixmapprovider.cpp: observer_stub.h uiserver_stub.h 
ktrader.o: ktrader.moc 
$(srcdir)/passdlg.cpp: observer_stub.h uiserver_stub.h 
kdirwatch.o: kdirwatch_p.moc kdirwatch.moc 
$(srcdir)/netaccess.cpp: observer_stub.h uiserver_stub.h 
statusbarprogress.lo: statusbarprogress.moc 
$(srcdir)/kdirnotify.cpp: observer_stub.h uiserver_stub.h 
slaveconfig.o: slaveconfig.moc 
dataslave.o: dataslave.moc 
connection.o: connection.moc 
renamedlg.o: renamedlg.moc 
$(srcdir)/job.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/paste.cpp: observer_stub.h uiserver_stub.h 
kservice.o: kservice_p.moc 
knfsshare.lo: knfsshare.moc 
scheduler.lo: scheduler.moc 
chmodjob.lo: chmodjob.moc 
ktrader.lo: ktrader.moc 
previewjob.lo: previewjob.moc 
defaultprogress.lo: defaultprogress.moc 
progressbase.lo: progressbase.moc 
$(srcdir)/renamedlg.cpp: observer_stub.h uiserver_stub.h 
kshred.lo: kshred.moc 
$(srcdir)/observer.cpp: observer_stub.h uiserver_stub.h 
connection.lo: connection.moc 
defaultprogress.o: defaultprogress.moc 
$(srcdir)/slaveconfig.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/skipdlg.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/kremoteencoding.cpp: observer_stub.h uiserver_stub.h 
passdlg.lo: passdlg.moc 
kdirlister.o: kdirlister.moc kdirlister_p.moc 
kdirlister.lo: kdirlister.moc kdirlister_p.moc 
$(srcdir)/defaultprogress.cpp: observer_stub.h uiserver_stub.h 
chmodjob.o: chmodjob.moc 
kfileshare.o: kfileshare.moc 
renamedlg.lo: renamedlg.moc 
ksambashare.lo: ksambashare.moc 
job.lo: jobclasses.moc 
uiserver_stub.cpp: uiserver_stub.h 
kshred.o: kshred.moc 
$(srcdir)/kprotocolmanager.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/scheduler.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/progressbase.cpp: observer_stub.h uiserver_stub.h 
slave.o: slave.moc 
kfilemetainfo.lo: kfilemetainfo.moc 
sessiondata.o: sessiondata.moc 
kservice.lo: kservice_p.moc 
kurifilter.o: kurifilter.moc 
$(srcdir)/kmimetypechooser.cpp: observer_stub.h uiserver_stub.h 
skipdlg.lo: skipdlg.moc 
kautomount.lo: kautomount.moc 
$(srcdir)/global.cpp: observer_stub.h uiserver_stub.h 
forwardingslavebase.o: forwardingslavebase.moc 
kscan.o: kscan.moc 
kfileshare.lo: kfileshare.moc 
nmcheck: 
$(srcdir)/slaveinterface.cpp: observer_stub.h uiserver_stub.h 
statusbarprogress.o: statusbarprogress.moc 
slaveinterface.o: slaveinterface.moc 
job.o: jobclasses.moc 
forwardingslavebase.lo: forwardingslavebase.moc 
metainfojob.o: metainfojob.moc 
kurlcompletion.o: kurlcompletion.moc 
knfsshare.o: knfsshare.moc 
observer.lo: observer.moc 
kshellcompletion.o: kshellcompletion.moc 
dataslave.lo: dataslave.moc 
$(srcdir)/tcpslavebase.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/forwardingslavebase.cpp: observer_stub.h uiserver_stub.h 
davjob.o: davjob.moc 
ksambashare.o: ksambashare.moc 
slave.lo: slave.moc 
kurlcompletion.lo: kurlcompletion.moc 
kurifilter.lo: kurifilter.moc 
$(srcdir)/kshred.cpp: observer_stub.h uiserver_stub.h 
kmimetypechooser.lo: kmimetypechooser.moc 
progressbase.o: progressbase.moc 
previewjob.o: previewjob.moc 
krun.lo: krun.moc 
$(srcdir)/kprotocolinfo.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/statusbarprogress.cpp: observer_stub.h uiserver_stub.h 
metainfojob.lo: metainfojob.moc 
